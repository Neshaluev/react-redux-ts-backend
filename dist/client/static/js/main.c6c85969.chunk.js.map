{"version":3,"sources":["router/ListRoutes.ts","components/NavBar/NavBar.tsx","redux/alert/type/ActionTypes.ts","redux/alert/actions.tsx","redux/alert/selectors.ts","components/Alert/Alert.tsx","components/Icon/Icon.tsx","components/Search/Search.jsx","helpers/helpers.ts","components/Select/SelectComponent.tsx","components/HomeFilters/HomeFilters.tsx","components/Layout/BlockBody/BlockBody.tsx","components/Layout/Layout.tsx","components/Modal/Portal/Portal.tsx","components/Modal/Modal.tsx","components/FileInput/FileInput.tsx","components/Input/Input.tsx","components/Textarea/TextareaComponent.tsx","components/Button/Button.tsx","helpers/constans.ts","pages/Categories/AddEditCategories/AddEditCategory.tsx","redux/categories/type/ActionTypes.ts","redux/categories/actions.tsx","redux/categories/type/state.ts","redux/categories/selectors.ts","components/Loading/Loading.tsx","pages/Categories/ListCategories/Category/Category.tsx","pages/Categories/ListCategories/ListCategories.tsx","components/Layout/BlockHead/BlockHead.tsx","components/Pagination/PagNav/PagNav.tsx","components/Pagination/Pagination.tsx","hooks/useModal.tsx","pages/Categories/Categories.tsx","pages/Categories/CategoryView/CategoryInformation/CategoryInformation.tsx","pages/Categories/CategoryView/CategoryProductList/CategoryProduct/CategoryProduct.tsx","pages/Categories/CategoryView/CategoryProductList/CategoryProductList.tsx","pages/Categories/DeleteCategory/DeleteCategory.tsx","redux/category/type/ActionTypes.ts","redux/category/actions.tsx","redux/category/type/state.ts","redux/category/selectors.ts","components/Layout/BlockHead/BlockHeadView/BlockHeadView.tsx","pages/Categories/CategoryView/CategoryView.tsx","redux/products/type/ActionTypes.ts","redux/products/actions.tsx","redux/products/type/state.ts","redux/products/selectors.ts","styles/images/helper/not_image.png","pages/Product/ProductList/ProductItem/ProductItem.tsx","pages/Product/ProductList/ProductList.tsx","pages/Product/Product.tsx","components/Tabs/TabNav/TabBarNav.tsx","components/Tabs/TabBar.tsx","components/Tabs/TabBarItem/TabBarItem.tsx","components/Editor/EditorToolbar.tsx","components/Editor/Editor.tsx","pages/Product/ProductView/ProductViewForm/Form/Form.tsx","pages/Product/ProductView/ProductViewForm/ProductViewForm.tsx","redux/product/type/ActionTypes.ts","redux/product/actions.tsx","redux/product/type/state.ts","redux/product/selectors.ts","pages/Product/ProductView/ProductDelete/ProductDelete.tsx","pages/Product/ProductView/ProductView.tsx","redux/user/type/ActionTypes.ts","redux/user/actions.tsx","pages/Register/Register.tsx","pages/SingnIn/SignIn.tsx","redux/alert/type/state.ts","redux/user/type/state.ts","redux/user/selectors.ts","hoc/withAuthRedierct.tsx","pages/NotFound/NotFound.tsx","router/Router.tsx","App.tsx","redux/categories/reducer.tsx","redux/category/reducer.tsx","redux/products/reducer.tsx","redux/product/reducer.tsx","redux/user/reducer.tsx","redux/alert/reducer.tsx","redux/rootReducer.tsx","api/axios.ts","api/categorie-api.ts","redux/categories/saga.ts","api/products-api.ts","redux/category/saga.ts","redux/products/saga.ts","redux/product/saga.ts","api/auth-api.ts","redux/user/saga.ts","redux/rootSaga.tsx","redux/redux.tsx","index.tsx"],"names":["routesComponent","path","name","NavBar","AlertActionTypes","className","to","map","item","idx","activeClassName","setAlertData","message","typeAlert","type","SET_ALERT_DATA","payload","selectAlertList","createSelector","state","alert","listAlert","Alert","dispatch","useDispatch","alertList","useSelector","handleClearAlertMessage","id","CLEAR_ALERT_DATA","useEffect","forEach","toast","position","POSITION","TOP_RIGHT","pauseOnFocusLoss","toastId","onOpen","autoClose","limit","Icon","onClick","size","disabled","attrs","elemSize","fontSize","classes","cn","func","style","defaultProps","Search","handleSearch","placeholder","onChange","e","target","value","lenStr","str","defaultLenght","endChar","length","substr","formatData","data","formData","FormData","Object","keys","append","formatLinkImg","window","location","origin","replace","Select","titleSelect","options","handleCheckedSelect","iconSize","inputRef","useState","isChecked","setChecked","selectItem","setSelectItem","checkItem","classList","contains","React","addEventListener","removeEventListener","checked","ref","handleCheckedList","HomeFilters","title","onSubmit","handleFilter","handleSetFilters","handleSearchDebounce","useCallback","_","debounce","text","setTextFilter","BlockBody","children","Layout","Portal","el","document","createElement","body","appendChild","this","removeChild","props","ReactDOM","createPortal","Component","Modal","isOpen","onCancel","FileInput","error","setState","htmlFor","defautProps","undefined","Input","label","autoComplete","required","Textarea","Button","active","classnames","Tag","href","preventDefault","FILE_SIZE","SUPPORTED_FORMATS","Schema","yup","shape","_id","min","description","image","test","includes","AddEditCategory","CategoriesActionTypes","handleCategory","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","errors","LoadingState","setCategories","SET_CATEGORIES_DATA","addCategory","ADD_CATEGORY","clearCategories","CLEAR_CATEGORIES","setCategoriesLoadingState","SET_LOADING_STATE","setLengthCategories","SET_LENGTH_CATEGORIES","selectCategories","categories","selectCategoriesItems","items","selectCategoriesLength","lengthCategories","selectCategoriesById","filter","selectLoadingState","loadingState","selectIsCategoriesLoading","LOADING","selectCategoriesFilters","filters","Loading","Category","imageSrc","img","src","alt","ListCategories","BlockHead","PagNav","maxPosts","limitItemPage","paginate","currentPage","activeItem","setActiveItem","itemsNav","totalPosts","Math","ceil","i","push","handleActiveNavigate","Pagination","handlePaginate","page","handleSetPaginate","setCurrentPage","setLimitItemPage","num","useModal","showModal","setShowModal","Categories","totalLenCategory","currentLenCategory","isLoading","useLocation","handleHideModal","handleShowModal","search","handleFetchCategories","sort","order","FETCH_CATEGORIES","handleCategoriesFilters","SET_CATEGORIES_FILTER","setCategoriesFilters","pathname","REQUEST_ADD_CATEGORY","CategoryInformation","itemData","CategoryProduct","CategoryProductList","listProduct","history","useHistory","routeProduct","key","DeleteCategory","handleDeleteCategory","CategoryActionTypes","setCategoryLoadingState","setCategory","SET_CATEGORY","setProductsForCategory","SET_PRODUCTS_FOR_CATEGORY","putCategory","PUT_CATEGORY","selectCategory","category","selectIsCategoryLoading","BlockHeadView","handleBackLocation","viewTools","CategoryView","ProductsActionTypes","useParams","handleGetCategory","REQUEST_FIND_BY_ID_CATEGORY","CLEAR_CATEGORY","categoryData","REQUEST_PUT_CATEGORY","requetsPutCategory","REQUEST_DELETE_CATEGORY","setProductsLoadingState","setProducts","SET_PRODUCTS","setLengthProducts","SET_LENGTH_PRODUCTS","selectProducts","products","selectProductsItems","selectProductsFilters","selectProductsLength","lengthProducts","selectIsProductsLoading","ProductItem","ProductList","productsList","Product","totalLenProduct","currentLenProduct","handleFetchProducs","REQUEST_GET_PRODUCTS","handleClearProduct","CLEAR_PRODUCTS","handleProductsFilters","SET_PRODUCT_FILTER","setProductFilters","TabBarNav","navLabel","onChangeActiveTab","TabBar","vertical","activeTab","setActiveTab","getChildrenLabels","currentTab","Children","child","cloneElement","TabBarItem","CustomUndo","viewBox","points","d","CustomRedo","Size","Quill","import","whitelist","Font","modules","toolbar","container","handlers","undo","quill","redo","delay","maxStack","userOnly","formats","QuillToolbar","defaultValue","Editor","getValueEditor","deascriptionData","converter","showdown","Converter","handleChange","makeMarkdown","makeHtml","EditorToolbar","theme","Form","handleCategorySetProduct","currentCategory","handleEditorSetProduct","descData","price","height","width","comment","ProductViewForm","handleCreateOrEditProduct","product","categoriesData","setValue","getValues","entries","handleSetPorductData","find","handleCreateProduct","ProductActionTypes","setProductLoadingState","setProduct","SET_PRODUCT","selectProduct","selectProductItem","selectIsProductLoading","ProductDelete","handleDeleteProduct","ProductView","UsersActionTypes","FETCH_ALL_CATEGORIES","handleFetchByIdProduct","REQUEST_FIND_BY_ID_PRODUCT","CLEAR_PRODUCT","productData","REQUEST_PUT_PRODUCT","REQUEST_CREATE_PRODUCT","requestCreateProduct","REQUEST_DELETE_PRODUCT","requetsDeleteProduct","setUserLoadingState","setUser","SET_USER","LoginFormSchema","email","password","firstname","lastname","Register","REQUEST_REGISTER_USER","requestRegistrationUser","SignIn","TypesMessageAlert","REQUEST_LOGIN_USER","requestLoginUser","selectUser","user","selectIsAuthState","isAuth","SpecialComponent","isLoggedIn","ERROR","NotFound","Router","exact","component","withAuth","App","baseFilter","initialStateCategories","NEVER","categoriesReducer","produce","draft","action","LOADED","splice","total","current","initialStateCategory","categoryReducer","initialStateProducts","productsReducer","productReducer","initialStateUser","userReducer","CLEAR_USER","LOGAOUT_USER","localStorage","clear","alertReducer","uid","index","findIndex","rootReducer","combineReducers","axios","interceptors","request","use","config","headers","getItem","CategoriesApi","get","then","post","patch","delete","watchFetchCatgories","watchFetchAllCatgories","watchAddCategory","fetchAllCategoriesRequest","fetchCategoriesRequest","addCategoryRequest","takeLatest","call","put","totalCategory","SUCCESS","categoriesAllSagas","ProductsApi","watchFetchCategory","watchPutCategory","watchDeleteCategory","requestFetchCategory","requestPutCategory","deleteCategoryRequest","categoryAllSagas","watchFetchProducts","requestFetchProducts","totalProducts","productsAllSagas","watchCreateProduct","watchPutProduct","watchFindByIdProduct","watchDeleteProduct","requestPutProduct","requestDeleteProduct","findByIdProduct","productAllSagas","AuthApi","loginUser","userData","a","registerUser","watchLoginUser","watchRegisterUser","requestRegisterUser","token","setItem","console","log","userAllSagas","rootSaga","all","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6c85969.chunk.js","sourcesContent":["export const routesComponent = [\r\n  { path: '/home', name: 'Products' },\r\n  { path: '/categories', name: 'Categories' },\r\n];\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport { routesComponent } from '../../router/ListRoutes';\r\n\r\nimport './NavBar.scss';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1 className=\"navbar--logo\">\r\n        <Link className=\"navbar--logo__text\" to={'/home'}>\r\n          Control <br /> Panel\r\n        </Link>\r\n      </h1>\r\n      <ul className=\"navbar--list\">\r\n        {routesComponent.map((item, idx) => (\r\n          <li key={idx + item.name} className=\"navbar--list__item\">\r\n            <NavLink\r\n              className={'navbar--link'}\r\n              activeClassName={'active'}\r\n              to={item.path}\r\n            >\r\n              {item.name}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"navbar--exit\">\r\n        <span className=\"navbar--exit__text\">\r\n          <Link to={'/'}>Logout</Link>\r\n        </span>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { TypeAlert } from './../../../../../ts-react-redux/src/redux/alert/type/state';\r\nimport { Action } from 'redux';\r\n\r\nexport enum AlertActionTypes {\r\n  SET_ALERT_DATA = 'alert/SET_ALERT_DATA',\r\n  CLEAR_ALERT_DATA = 'alert/CELAR_ALERT_DATA',\r\n}\r\n\r\nexport interface SetAlertDataActionInterface extends Action<AlertActionTypes> {\r\n  type: AlertActionTypes.SET_ALERT_DATA;\r\n  payload: TypeAlert;\r\n}\r\nexport interface ClearAlertDataActionInterface\r\n  extends Action<AlertActionTypes> {\r\n  type: AlertActionTypes.CLEAR_ALERT_DATA;\r\n  payload: string;\r\n}\r\n\r\nexport type ActionAlert =\r\n  | SetAlertDataActionInterface\r\n  | ClearAlertDataActionInterface;\r\n","import {\r\n  SetAlertDataActionInterface,\r\n  AlertActionTypes,\r\n  ClearAlertDataActionInterface,\r\n} from './type/ActionTypes';\r\n\r\nexport const setAlertData = (\r\n  message: string,\r\n  typeAlert: string,\r\n): SetAlertDataActionInterface => ({\r\n  type: AlertActionTypes.SET_ALERT_DATA,\r\n  payload: {\r\n    typeAlert,\r\n    message,\r\n  },\r\n});\r\n\r\nexport const clearAlert = (payload: string): ClearAlertDataActionInterface => ({\r\n  type: AlertActionTypes.CLEAR_ALERT_DATA,\r\n  payload,\r\n});\r\n","import { createSelector } from 'reselect';\r\nimport { TypeStateRootReducer } from './../rootReducer';\r\n\r\nexport const selectAlert = (state: TypeStateRootReducer) => state.alert;\r\nexport const selectAlertList = createSelector(\r\n  selectAlert,\r\n  (alert) => alert.listAlert,\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { clearAlert } from '../../redux/alert/actions';\r\nimport { selectAlertList } from '../../redux/alert/selectors';\r\nimport { TypesMessageAlert } from '../../redux/alert/type/state';\r\n\r\nimport './Alert.scss';\r\n\r\nfunction Alert() {\r\n  const dispatch = useDispatch();\r\n  const alertList = useSelector(selectAlertList);\r\n\r\n  const handleClearAlertMessage = (id: string) => {\r\n    dispatch(clearAlert(id));\r\n  };\r\n\r\n  const notify = (message: string, type: TypesMessageAlert, id: string) => {\r\n    toast[type](message, {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n      pauseOnFocusLoss: false,\r\n      toastId: id,\r\n      onOpen: () => handleClearAlertMessage(id),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (alertList !== []) {\r\n      alertList.forEach((alert) =>\r\n        //@ts-ignore\r\n        notify(alert.message, alert.typeAlert, alert.id),\r\n      );\r\n    }\r\n  }, [alertList]);\r\n\r\n  return <ToastContainer autoClose={4000} limit={5} />;\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport './icon.scss';\r\n\r\ntype TIcon = {\r\n  name?: string;\r\n  className?: string;\r\n  size?: number;\r\n  onClick?: any;\r\n  disabled?: boolean;\r\n  id?: string;\r\n  [x: string]: any\r\n};\r\n\r\nconst Icon = ({\r\n  name,\r\n  className,\r\n  onClick,\r\n  size,\r\n  disabled,\r\n  id,\r\n  ...attrs\r\n}: TIcon) => {\r\n  const elemSize: any = size ? { fontSize: `${size}px` } : null;\r\n  const classes = cn(\r\n    `icon-${name}`,\r\n    className,\r\n    { func: onClick },\r\n    { disabled },\r\n  );\r\n  return (\r\n    <i\r\n      {...attrs}\r\n      id={id}\r\n      style={elemSize}\r\n      className={classes}\r\n      onClick={disabled ? null : onClick}\r\n    />\r\n  );\r\n};\r\n\r\nIcon.defaultProps = {\r\n  name: '',\r\n  className: '',\r\n  size: null,\r\n  onClick: null,\r\n  disabled: false,\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Icon from \"../Icon/Icon\";\r\n\r\nimport \"./search.scss\";\r\n\r\ntype TPropsSearch = {\r\n  handleSearch: (...args: any) => any\r\n}\r\n\r\nfunction Search({handleSearch}: handleSearch) {\r\n  return (\r\n    <div className=\"search--box\">\r\n      <input type=\"search\" className=\"search--input\" placeholder={\"SEARCH\"} onChange={e => handleSearch(e.target.value)}/>\r\n      <Icon className=\"search--icon\" name={\"magnifier\"} size={25} />\r\n    </div>\r\n  );\r\n}\r\n\r\nSearch.defaultProps = {\r\n  handleSearch: () => {}\r\n}\r\n\r\nexport default Search;\r\n","export const lenStr = (str = '', defaultLenght = 150, endChar = '...') => {\r\n  return str.length > defaultLenght\r\n    ? str.substr(0, defaultLenght) + endChar\r\n    : str;\r\n};\r\n\r\nexport const formatData = (data: any) => {\r\n  const formData = new FormData();\r\n  Object.keys(data).forEach((item: any) => {\r\n    formData.append(item, data[item]);\r\n    if (item === 'image') {\r\n      formData.append('image', data[item][0], data[item][0].name);\r\n    }\r\n  });\r\n\r\n  return formData;\r\n};\r\n\r\nexport const formatLinkImg = (str:any) =>{ \r\n  if(str) {\r\n    return window.location.origin + '/' + str.replace(/\\\\/g, '/')\r\n  } else {\r\n    return ''\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { lenStr } from '../../helpers/helpers';\r\n\r\nimport Icon from '../Icon/Icon';\r\n\r\nimport './select.scss';\r\n\r\ntype TPropsSelect = {\r\n  titleSelect: string,\r\n  options: string[],\r\n  handleCheckedSelect: (...args: any) => void,\r\n  iconSize?: number,\r\n  inputRef?: any\r\n}\r\n\r\nfunction Select({\r\n  titleSelect,\r\n  options,\r\n  handleCheckedSelect,\r\n  iconSize,\r\n  inputRef,\r\n}: TPropsSelect) {\r\n  const [isChecked, setChecked] = useState<boolean>(false);\r\n  const [selectItem, setSelectItem] = useState<string | null>(null);\r\n\r\n  const handleCheckedList = (data: any) => {\r\n    handleCheckedSelect(data);\r\n    setSelectItem(data);\r\n    setChecked(!isChecked);\r\n  };\r\n\r\n  const checkItem = (e: any) => {\r\n    const { target } = e;\r\n    if (!target.classList.contains('select-box__input-text')) {\r\n      setChecked(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('click', checkItem);\r\n    return () => window.removeEventListener('click', checkItem);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"select-box\">\r\n      <input\r\n        className=\"select-box__input\"\r\n        type=\"radio\"\r\n        id=\"0\"\r\n        value=\"1\"\r\n        name=\"Ben\"\r\n        checked={isChecked}\r\n      />\r\n      <div\r\n        className=\"select-box__input-text\"\r\n        onClick={() => setChecked(!isChecked)}\r\n        ref={inputRef}\r\n      >\r\n        {selectItem == null ? titleSelect : lenStr(selectItem, 15)}\r\n      </div>\r\n      <Icon\r\n        className=\"select-box__input-icon\"\r\n        name={'arrow-down'}\r\n        size={iconSize}\r\n      />\r\n      <ul className=\"select-box__list\">\r\n        {options.map((data: any, idx: any) => (\r\n          <li\r\n            className=\"select-box__option\"\r\n            key={idx}\r\n            onClick={() => handleCheckedList(data)}\r\n          >\r\n            <span>{lenStr(data, 15)}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nSelect.defaultProps = {\r\n  options: [''],\r\n  titleSelect: '',\r\n  handleCheckedSelect: () => {},\r\n  iconSize: 25,\r\n};\r\n\r\nexport default Select;\r\n","import _ from 'lodash';\r\nimport React, { useCallback } from 'react';\r\nimport Icon from '../Icon/Icon';\r\nimport Search from '../Search/Search';\r\nimport Select from '../Select/SelectComponent';\r\n\r\nimport './HomeFilters.scss';\r\n\r\ntype TPropsHomeFilter = {\r\n  title?: string,\r\n  onSubmit?: () => void,\r\n  handleFilter?: (...args: any) => void,\r\n}\r\n\r\nfunction HomeFilters({ title, onSubmit, handleFilter }: TPropsHomeFilter) {\r\n  const sorting: string[] = ['name', 'title', 'description'];\r\n  const order: string[] = ['asc', 'desc'];\r\n\r\n  const handleSetFilters = (name: string, value: string) => {\r\n    // @ts-ignore\r\n    handleFilter({ name, value });\r\n  };\r\n\r\n  const handleSorting = (value: any) => {\r\n    handleSetFilters('sort', value);\r\n  };\r\n\r\n  const handleOrder = (value: any) => {\r\n    handleSetFilters('order', value);\r\n  };\r\n\r\n  const setTextFilter = (text: string) => handleSetFilters('search', text);\r\n\r\n  const handleSearchDebounce = useCallback(\r\n    _.debounce((text) => setTextFilter(text), 1000),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"control-panel--top\">\r\n        <div className=\"control-panel--title\">\r\n          <h2 className=\"control-panel--title__text\">{title}</h2>\r\n        </div>\r\n        <div className=\"control-panel--controller\">\r\n          <div className=\"controller--filter\">\r\n            <Select\r\n              titleSelect={'Sorting'}\r\n              options={sorting}\r\n              handleCheckedSelect={handleSorting}\r\n            />\r\n          </div>\r\n          <div className=\"controller--sort\">\r\n            <Select\r\n              titleSelect={'Order'}\r\n              options={order}\r\n              handleCheckedSelect={handleOrder}\r\n            />\r\n          </div>\r\n          <div className=\"controller--refresh\">\r\n            <span className=\"controller--refresh__text\">RESET</span>\r\n            <Icon\r\n              className=\"controller--refresh__icon\"\r\n              name={'refresh'}\r\n              size={22}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"control-panel--bottom\">\r\n        <div className=\"add-element\" onClick={onSubmit}>\r\n          <span className=\"add-element__decor\"></span>\r\n          <h2 className=\"add-element__title\">Create</h2>\r\n        </div>\r\n        <div className=\"controller--search\">\r\n          <Search handleSearch={handleSearchDebounce} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nHomeFilters.defaultProps = {\r\n  title: '',\r\n  onSubmit: () => {},\r\n  handleFilter: () => {},\r\n};\r\n\r\nexport default HomeFilters;\r\n","import React from 'react'\r\n\r\nfunction BlockBody({ children }: any) {\r\n  return (\r\n\r\n      <div className=\"control-panel--body\">{children}</div>\r\n\r\n  );\r\n}\r\n\r\nexport default BlockBody\r\n","import React from 'react';\r\n\r\nimport './layout.scss';\r\n\r\ntype TLayout = {\r\n  children: React.ReactNode\r\n}\r\n\r\nfunction Layout({ children }: TLayout ) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"control-panel\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Portal extends Component {\r\n  el = document.createElement(\"div\");\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nexport default Portal;\r\n","import React from 'react';\r\n\r\nimport Portal from './Portal/Portal';\r\n\r\nimport './Modal.scss';\r\nimport Icon from '../Icon/Icon';\r\n\r\ntype TPropsModal = {\r\n  title: string,\r\n  isOpen: boolean,\r\n  onCancel?: () => void,\r\n  onSubmit?: () => void,\r\n  children: React.ReactNode,\r\n}\r\n\r\nconst Modal = ({ title, isOpen, onCancel, children }: TPropsModal) => {\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Portal>\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal-window\">\r\n              <div className=\"modal-header\">\r\n                <div className=\"modal-title\">{title}</div>\r\n                <Icon name=\"close\" onClick={onCancel} size={20} />\r\n              </div>\r\n              <div className=\"modal-body\">{children}</div>\r\n            </div>\r\n          </div>\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nModal.defaultProps = {\r\n  title: 'Modal title',\r\n  isOpen: false,\r\n  onCancel: () => undefined,\r\n  onSubmit: () => undefined,\r\n  children: null,\r\n};\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport Icon from '../Icon/Icon';\r\n\r\nimport './FileInput.scss';\r\n\r\ntype TFileInput = {\r\n  name: string,\r\n  error?: any,\r\n  inputRef?: any,\r\n  [x: string]: any\r\n}\r\n\r\nfunction FileInput({ name, inputRef, error, ...attrs }: TFileInput) {\r\n  const [state, setState] = useState<any>('Upload Image');\r\n\r\n  const handleFileInput = () => {\r\n    if (!error) {\r\n      setState('Image Loaded');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-input\">\r\n      <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n        <Icon name={'cloud-upload'} />\r\n        <span className=\"custom-file-upload__text\">{state}</span>\r\n      </label>\r\n      <input\r\n        {...attrs}\r\n        name={name}\r\n        id=\"file-upload\"\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        onChange={handleFileInput}\r\n      />\r\n      {error && <span className=\"file-upload-error\"> {error.message}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nFileInput.defautProps = {\r\n  error: undefined,\r\n  inputRef: null,\r\n};\r\n\r\nexport default FileInput;\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport './input.scss';\r\n\r\ntype TPropsInput = {\r\n  id?: string,\r\n  className?: string,\r\n  label?: string,\r\n  inputRef?: any,\r\n  error?: { [x: string]: any },\r\n  [x: string]: any\r\n}\r\n\r\nconst Input = ({ id, className, label, inputRef, error, ...attrs }: TPropsInput) => {\r\n  const classes = cn('input', className, { error });\r\n  return (\r\n    <>\r\n      <div className=\"input\">\r\n        <input\r\n          name={id}\r\n          id={id}\r\n          className={classes}\r\n          ref={inputRef}\r\n          {...attrs}\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n        <label htmlFor={id} className=\"label-name\">\r\n          <span className=\"content-name\">\r\n            {label}\r\n            {attrs.required && <span className=\"inputRequired\">*</span>}\r\n          </span>\r\n        </label>\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: '',\r\n  label: '',\r\n  error: undefined,\r\n  inputRef: null,\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './textarea.scss';\r\n\r\ntype TPropsTextarea = {\r\n  name?: string,\r\n  inputRef?: any, \r\n  error?: any,\r\n  label?: string,\r\n  id?: string,\r\n  required?: boolean,\r\n  [x:string]: any\r\n}\r\n\r\nfunction Textarea({\r\n  name,\r\n  inputRef,\r\n  error,\r\n  label,\r\n  id,\r\n  required,\r\n  ...attrs\r\n}: TPropsTextarea) {\r\n  return (\r\n    <>\r\n      {error && <span className=\"textaria-error\">{error.message}</span>}\r\n      <textarea\r\n        {...attrs}\r\n        id={id}\r\n        ref={inputRef}\r\n        name={name}\r\n        className=\"textaria\"\r\n      ></textarea>\r\n    </>\r\n  );\r\n}\r\n\r\nTextarea.defaultProps = {\r\n name: '', \r\n inputRef: null,\r\n error: undefined,\r\n label: '',\r\n id: null,\r\n required: false\r\n}\r\n\r\nexport default Textarea;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './button.scss';\r\nimport { SyntheticEvent } from 'react';\r\n\r\ntype TPropsButton = {\r\n  children?: any,\r\n  onClick?: () => void,\r\n  className?: string,\r\n  disabled?: boolean,\r\n  active?: any,\r\n  [x: string]: any\r\n}\r\n\r\nconst Button = ({\r\n  children,\r\n  onClick,\r\n  className,\r\n  disabled,\r\n  active,\r\n  ...attrs\r\n}: TPropsButton) => {\r\n  const onClickAction = (e: SyntheticEvent ) => {\r\n    if (disabled) {\r\n      e.preventDefault();\r\n    } else {\r\n       onClick();\r\n    }\r\n  };\r\n  const classes = classnames('button', className, { active });\r\n  const Tag = attrs.href ? 'a' : 'button';\r\n  return (\r\n    <Tag\r\n      {...attrs}\r\n      className={classes}\r\n      disabled={disabled}\r\n      onClick={onClickAction}\r\n    >\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  children: 'Default button',\r\n  onClick: () => {},\r\n  className: '',\r\n  disabled: false,\r\n  active: false,\r\n  type: 'button',\r\n};\r\n\r\nexport default Button;\r\n","export const FILE_SIZE = 160 * 1024;\r\n\r\nexport const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png'];\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nimport FileInput from '../../../components/FileInput/FileInput';\r\nimport Input from '../../../components/Input/Input';\r\nimport Textarea from '../../../components/Textarea/TextareaComponent';\r\nimport Button from '../../../components/Button/Button';\r\n\r\nimport './AddEditCategory.scss';\r\nimport { FILE_SIZE, SUPPORTED_FORMATS } from '../../../helpers/constans';\r\nimport { TypeCategory } from '../../../redux/category/type/state';\r\n\r\nexport type AddOrEditFormProps = {\r\n  _id: string;\r\n  name: string;\r\n  title: string;\r\n  description: string;\r\n  image: string;\r\n};\r\n\r\nconst Schema = yup.object().shape({\r\n  _id: yup.string(),\r\n  name: yup\r\n    .string()\r\n    .min(1, 'Min name length is 1 characters.')\r\n    .required('This field name is required.'),\r\n  title: yup\r\n    .string()\r\n    .min(1, 'Min title length is 1 characters.')\r\n    .required('This field title is required.'),\r\n  description: yup\r\n    .string()\r\n    .min(1, 'Min description length is 1 characters.')\r\n    .required('This field description is required.'),\r\n  image: yup\r\n    .mixed()\r\n    .test('fileSize', 'File upload error.', (value) => {\r\n      return value[0] && value[0].size <= FILE_SIZE;\r\n    })\r\n    .test('fileFormat', 'Unsupported Format', (value) => {\r\n      return value[0] && SUPPORTED_FORMATS.includes(value[0].type);\r\n    }),\r\n});\r\n\r\nexport type TPropsAddEditCategory = {\r\n  item: TypeCategory | undefined ,\r\n  handleCategory: (...args: any) => any\r\n}\r\n\r\nfunction AddEditCategory({ item, handleCategory }: any) {\r\n  const { register, handleSubmit, errors } = useForm<AddOrEditFormProps>({\r\n    defaultValues: {\r\n      _id: item?._id || '',\r\n      name: item?.name || '',\r\n      title: item?.title || '' ,\r\n      description: item?.description || '',\r\n      image: '',\r\n    },\r\n    //@ts-ignore\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const onSubmit = (data: AddOrEditFormProps) => {\r\n    handleCategory(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"category-modal\">\r\n      <div className=\"category-modal__filed\">\r\n        <Input\r\n          name=\"name\"\r\n          id=\"CategoryName\"\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          required\r\n          inputRef={register({ required: true })}\r\n          error={errors.name}\r\n        />\r\n      </div>\r\n      <div className=\"category-modal__filed\">\r\n        <Input\r\n          name=\"title\"\r\n          id=\"CategoryTitle\"\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          required\r\n          inputRef={register({ required: true })}\r\n          error={errors.title}\r\n        />\r\n      </div>\r\n      <div className=\"category-modal__filed\">\r\n        <h4 className=\"category-modal__description-text\">Description*:</h4>\r\n        <Textarea\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          required\r\n          inputRef={register({ required: true })}\r\n          error={errors.description}\r\n        />\r\n      </div>\r\n      <div className=\"category-modal__filed\">\r\n        <FileInput name=\"image\" inputRef={register()} error={errors.image} />\r\n      </div>\r\n      <div className=\"category-modal__footer\">\r\n        <Button type={'submit'} className={'accent'}>\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n// AddEditCategory.defaultProps = {\r\n//   item: undefined,\r\n//   handleCategory: () => {}\r\n// }\r\n\r\nexport default AddEditCategory;\r\n","import { Action } from 'redux';\r\nimport { CategoriesState, LoadingState, TypeCategory } from './state';\r\n\r\nexport enum CategoriesActionTypes {\r\n  SET_CATEGORIES_DATA = 'categories/SET_CATEGORIES_DATA',\r\n  FETCH_CATEGORIES = 'categories/FETCH_CATEGORIES',\r\n  FETCH_ALL_CATEGORIES = 'categories/FETCH_ALL_CATEGORIES',\r\n  SET_LOADING_STATE = 'categories/SET_LOADING_STATE',\r\n  REQUEST_ADD_CATEGORY = 'categories/REQUEST_ADD_CATEGORY',\r\n  ADD_CATEGORY = 'categories/ADD_CATEGORY',\r\n  REQUEST_CLEAR_CATEGORIES = 'categories/REQUEST_CLEAR_CATEGORIES',\r\n  CLEAR_CATEGORIES = 'categories/CLEAR_CATEGORIES',\r\n  SET_CATEGORIES_FILTER = 'categories/SET_CATEGORIES_FILTER',\r\n  SET_LENGTH_CATEGORIES = 'categories/SET_LENGTH_CATEGORIES',\r\n}\r\n\r\nexport interface SetCategoriesFilters extends Action<CategoriesActionTypes> {\r\n  type: CategoriesActionTypes.SET_CATEGORIES_FILTER;\r\n  payload: any;\r\n}\r\n\r\nexport interface RequestClearCategoriesActionInterface {\r\n  type: CategoriesActionTypes.REQUEST_CLEAR_CATEGORIES;\r\n}\r\n\r\nexport interface ClearCategoriesActionInterface {\r\n  type: CategoriesActionTypes.CLEAR_CATEGORIES;\r\n}\r\n\r\nexport interface SetCategoriesActionInterface\r\n  extends Action<CategoriesActionTypes> {\r\n  type: CategoriesActionTypes.SET_CATEGORIES_DATA;\r\n  payload: CategoriesState['items'];\r\n}\r\n\r\nexport interface FetchCategoriesActionInterface\r\n  extends Action<CategoriesActionTypes> {\r\n  type: CategoriesActionTypes.FETCH_CATEGORIES;\r\n  payload: any;\r\n}\r\nexport interface FetchAllCategoriesActionInterface\r\n  extends Action<CategoriesActionTypes> {\r\n  type: CategoriesActionTypes.FETCH_ALL_CATEGORIES;\r\n}\r\nexport interface SetLoadingStateActionInterface\r\n  extends Action<CategoriesActionTypes> {\r\n  type: CategoriesActionTypes.SET_LOADING_STATE;\r\n  payload: LoadingState;\r\n}\r\n\r\nexport interface RequestAddCategoryActionInterface\r\n  extends Action<CategoriesActionTypes> {\r\n  type: CategoriesActionTypes.REQUEST_ADD_CATEGORY;\r\n  payload: TypeCategory;\r\n}\r\n\r\nexport interface AddCategoryActionInterface\r\n  extends Action<CategoriesActionTypes> {\r\n  type: CategoriesActionTypes.ADD_CATEGORY;\r\n  payload: TypeCategory;\r\n}\r\n\r\nexport interface SetLengthCategories extends Action<CategoriesActionTypes> {\r\n  type: CategoriesActionTypes.SET_LENGTH_CATEGORIES;\r\n  payload: any;\r\n}\r\n\r\nexport type ActionCategories =\r\n  | SetCategoriesActionInterface\r\n  | FetchCategoriesActionInterface\r\n  | SetLoadingStateActionInterface\r\n  | AddCategoryActionInterface\r\n  | RequestAddCategoryActionInterface\r\n  | RequestClearCategoriesActionInterface\r\n  | ClearCategoriesActionInterface\r\n  | SetCategoriesFilters\r\n  | FetchAllCategoriesActionInterface\r\n  | SetLengthCategories;\r\n","import {\r\n  AddCategoryActionInterface,\r\n  CategoriesActionTypes,\r\n  FetchAllCategoriesActionInterface,\r\n  FetchCategoriesActionInterface,\r\n  RequestAddCategoryActionInterface,\r\n  SetCategoriesActionInterface,\r\n  SetCategoriesFilters,\r\n  SetLengthCategories,\r\n  SetLoadingStateActionInterface,\r\n} from './type/ActionTypes';\r\nimport { CategoriesState, LoadingState, TypeCategory } from './type/state';\r\n\r\nexport const setCategories = (\r\n  payload: CategoriesState['items'],\r\n): SetCategoriesActionInterface => ({\r\n  type: CategoriesActionTypes.SET_CATEGORIES_DATA,\r\n  payload,\r\n});\r\n\r\nexport const fetchAllCategories = (): FetchAllCategoriesActionInterface => ({\r\n  type: CategoriesActionTypes.FETCH_ALL_CATEGORIES,\r\n});\r\n\r\nexport const fetchCategories = (\r\n  payload: any,\r\n): FetchCategoriesActionInterface => ({\r\n  type: CategoriesActionTypes.FETCH_CATEGORIES,\r\n  payload,\r\n});\r\n\r\nexport const requestAddCategory = (\r\n  payload: TypeCategory,\r\n): RequestAddCategoryActionInterface => ({\r\n  type: CategoriesActionTypes.REQUEST_ADD_CATEGORY,\r\n  payload,\r\n});\r\nexport const addCategory = (\r\n  payload: TypeCategory,\r\n): AddCategoryActionInterface => ({\r\n  type: CategoriesActionTypes.ADD_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const clearCategories = () => ({\r\n  type: CategoriesActionTypes.CLEAR_CATEGORIES,\r\n});\r\n\r\nexport const setCategoriesLoadingState = (\r\n  payload: LoadingState,\r\n): SetLoadingStateActionInterface => ({\r\n  type: CategoriesActionTypes.SET_LOADING_STATE,\r\n  payload,\r\n});\r\n\r\nexport const setCategoriesFilters = (payload: any): SetCategoriesFilters => ({\r\n  type: CategoriesActionTypes.SET_CATEGORIES_FILTER,\r\n  payload,\r\n});\r\n\r\nexport const setLengthCategories = (payload: any): SetLengthCategories => ({\r\n  type: CategoriesActionTypes.SET_LENGTH_CATEGORIES,\r\n  payload,\r\n});\r\n","export enum LoadingState {\r\n  LOADED = 'LOADED',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n  NEVER = 'NEVER',\r\n}\r\n\r\nexport type TypeCategory = {\r\n  _id?: string;\r\n  name: string;\r\n  imageSrc?: any;\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\nexport type TypeFiltersCategory = {\r\n  search?: string;\r\n  page?: number;\r\n  limit?: number;\r\n  sort?: string;\r\n  order?: string;\r\n};\r\n\r\nexport type lenCategories = {\r\n  totalLenCategory: number | null;\r\n  currentLenCategory: number | null;\r\n};\r\n\r\nexport type CategoriesState = {\r\n  items: TypeCategory[];\r\n  loadingState: LoadingState;\r\n  filters: any;\r\n  lengthCategories: lenCategories;\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { TypeStateRootReducer } from './../rootReducer';\r\nimport { LoadingState } from './type/state';\r\n\r\nexport const selectCategories = (state: TypeStateRootReducer) =>\r\n  state.categories;\r\nexport const selectCategoriesItems = createSelector(\r\n  selectCategories,\r\n  (categories) => categories.items,\r\n);\r\nexport const selectCategoriesLength = createSelector(\r\n  selectCategories,\r\n  (categories) => categories.lengthCategories,\r\n);\r\n// @ts-ignore\r\nexport const selectCategoriesById = createSelector(\r\n  (state: any) => state,\r\n  (_: any, id: any) => id,\r\n  (state: any, id: any) =>\r\n    state.categories.items.filter((item: any) => item._id === id),\r\n);\r\n\r\nexport const selectLoadingState = (state: TypeStateRootReducer): LoadingState =>\r\n  selectCategories(state).loadingState;\r\nexport const selectIsCategoriesLoading = (\r\n  state: TypeStateRootReducer,\r\n): boolean => selectLoadingState(state) === LoadingState.LOADING;\r\nexport const selectIsCategoriesLoadead = (\r\n  state: TypeStateRootReducer,\r\n): boolean => selectLoadingState(state) === LoadingState.LOADED;\r\n\r\nexport const selectCategoriesFilters = createSelector(\r\n  selectCategories,\r\n  (categories) => categories.filters,\r\n);\r\n","import React from 'react';\r\n\r\nimport './loading.scss';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"content-loader\">\r\n      <div className=\"lds-ellipsis\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { TypeCategory } from '../../../../redux/categories/type/state';\r\nimport { formatLinkImg, lenStr } from '../../../../helpers/helpers';\r\n\r\nimport './category.scss';\r\n\r\ntype TPropsCategory = TypeCategory;\r\n\r\nfunction Category({ _id, name, title, description, imageSrc }: TPropsCategory) {\r\n  const img = formatLinkImg(imageSrc)\r\n\r\n  return (\r\n    <div className=\"category\">\r\n      <div className=\"category--header\">\r\n        <Link\r\n          to={`/categories/category/${_id}`}\r\n          className=\"category--link\"\r\n        ></Link>\r\n        <h3 className=\"category--header__title\">{lenStr(name, 20)}</h3>\r\n        <div className=\"category--header__overlay\">\r\n          <h3 className=\"category--header__text\">{lenStr(title, 70)}</h3>\r\n          <p className=\"category--header__description\">{lenStr(description)}</p>\r\n        </div>\r\n        <div className=\"category--header__controller\">\r\n          {/* <span className=\"category--header__controller-see\">\r\n            <Icon name={\"pencil\"} size={15} data-category-edit={id} />\r\n          </span> */}\r\n          {/* <span className=\"category--header__controller-delete\">\r\n            <Icon name={\"trash\"} size={15} data-category-delete={id} />\r\n          </span> */}\r\n        </div>\r\n        <img\r\n          // className=\"img-responsive category--header__img\"\r\n          className=\"category--header__img img-responsive\"\r\n          src={img}\r\n          alt={name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCategory.defaultProps = {\r\n  _id: '',\r\n  name: '',\r\n  title: '',\r\n  description: '',\r\n  imageSrc: '',\r\n};\r\n\r\nexport default Category;\r\n","import React from 'react';\r\n\r\nimport Category from './Category/Category';\r\n\r\nfunction ListCategories({ categories }: any) {\r\n  return (\r\n    <div className=\"categories\">\r\n      {categories.map((data: any, idx: any) => (\r\n        <Category key={idx} {...data} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nListCategories.defaultProps = {\r\n  categories: []\r\n}\r\n\r\nexport default ListCategories;\r\n","import React from 'react';\r\n\r\ntype TBlockHead = {\r\n  children: React.ReactNode\r\n}\r\n\r\nfunction BlockHead({ children }: TBlockHead) {\r\n  return <div className=\"control-panel--header\">{children}</div>;\r\n}\r\n\r\nexport default BlockHead;\r\n","import React, { useState } from 'react';\r\nimport Icon from '../../Icon/Icon';\r\n\r\nimport './PagNav.scss';\r\n\r\ntype TPropsNav = {\r\n  maxPosts: number | undefined | null,\r\n  paginate: (...args: any) => any,\r\n  currentPage: number,\r\n  limitItemPage: number\r\n}\r\n\r\nconst PagNav = ({ maxPosts, limitItemPage, paginate, currentPage }: TPropsNav) => {\r\n  const [activeItem, setActiveItem] = useState<any>(currentPage);\r\n  const itemsNav: any = [];\r\n  //@ts-ignore\r\n  const totalPosts = Math.ceil(maxPosts / limitItemPage);\r\n  for (let i = 1; i <= totalPosts; i++) {\r\n    itemsNav.push(i);\r\n  }\r\n  const handleActiveNavigate = (item: any) => {\r\n    setActiveItem(item);\r\n    paginate(item);\r\n  };\r\n  return (\r\n    <ul className=\"pagination--list\">\r\n      <Icon\r\n        className=\"pagination--list__button\"\r\n        onClick={() => paginate(currentPage !== 1 ? currentPage - 1 : 1)}\r\n        name={'arrow-left'}\r\n        size={20}\r\n      />\r\n      {itemsNav.map((item: any) => (\r\n        <li className=\"pagination--list__item\" key={item}>\r\n          <span\r\n            className={`pagination--list__item-number ${\r\n              item === activeItem ? 'active' : ''\r\n            } `}\r\n            onClick={() => handleActiveNavigate(item)}\r\n          >\r\n            {item}\r\n          </span>\r\n        </li>\r\n      ))}\r\n      <Icon\r\n        className=\"pagination--list__button\"\r\n        onClick={() =>\r\n          paginate(currentPage !== totalPosts ? currentPage + 1 : totalPosts)\r\n        }\r\n        name={'arrow-right'}\r\n        size={20}\r\n      />\r\n    </ul>\r\n  );\r\n};\r\n\r\nPagNav.defaultProps = {\r\n  maxPosts: 1,\r\n  limitItemPage: 1,\r\n  paginate: () => {},\r\n  currentPage: 0\r\n}\r\n\r\nexport default PagNav;\r\n","import React, { useState } from 'react';\r\nimport Select from '../Select/SelectComponent';\r\n\r\nimport PagNav from './PagNav/PagNav';\r\n\r\nimport './Pagination.scss';\r\n\r\nexport type TPropsPagination = {\r\n  maxPosts: number | undefined | null,\r\n  handlePaginate: (...args: any) => void,\r\n  page: number,\r\n  limit: number,\r\n}\r\n\r\nfunction Pagination({ maxPosts, handlePaginate, page, limit }: TPropsPagination) {\r\n  const handleSetPaginate = (name: string, value: number) => {\r\n    handlePaginate({ name, value });\r\n  };\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [limitItemPage, setLimitItemPage] = useState(limit);\r\n\r\n  const lastIndexPage = currentPage * limitItemPage;\r\n  const firstIndexPage = lastIndexPage - limitItemPage;\r\n\r\n  const paginate = (num: any) => {\r\n    handleSetPaginate('page', num);\r\n    setCurrentPage(num);\r\n  };\r\n\r\n  const handlteLimitItemPage = (e: any) => {\r\n    handleSetPaginate('limit', e);\r\n    handleSetPaginate('page', 1);\r\n    setLimitItemPage(e);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <div className=\"pagination--nav\">\r\n        {/* Реализовать карусель пагинации */}\r\n        <PagNav\r\n          paginate={paginate}\r\n          limitItemPage={limit}\r\n          maxPosts={maxPosts}\r\n          currentPage={page}\r\n        />\r\n      </div>\r\n      <div className=\"pagination--limit\">\r\n        <Select\r\n          titleSelect={limit}\r\n          options={['5', '10', '15']}\r\n          handleCheckedSelect={handlteLimitItemPage}\r\n          iconSize={15}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPagination.defaultProps = {\r\n  maxPosts: 0,\r\n  page: 0,\r\n  limit: 5\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nexport type TypeModal = 'AddCategory' | 'EditCategory' | 'DeleteCategory' | undefined;\r\n\r\nexport function useModal() {\r\n  const [showModal, setShowModal] = React.useState<any>();\r\n\r\n  const handleHideModal = () => {\r\n    setShowModal(undefined);\r\n  };\r\n  const handleShowModal = (data: TypeModal) => {\r\n    setShowModal(data);\r\n  };\r\n\r\n  return [handleHideModal, handleShowModal, showModal];\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport ControlPanel from '../../components/HomeFilters/HomeFilters';\r\nimport BlockBody from '../../components/Layout/BlockBody/BlockBody';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport AddEditCategory from './AddEditCategories/AddEditCategory';\r\nimport {\r\n  clearCategories,\r\n  fetchCategories,\r\n  requestAddCategory,\r\n  setCategoriesFilters,\r\n} from '../../redux/categories/actions';\r\n\r\nimport {\r\n  selectCategoriesFilters,\r\n  selectCategoriesItems,\r\n  selectCategoriesLength,\r\n  selectIsCategoriesLoading,\r\n} from '../../redux/categories/selectors';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport ListCategories from './ListCategories/ListCategories';\r\nimport BlockHead from '../../components/Layout/BlockHead/BlockHead';\r\nimport Pagination from '../../components/Pagination/Pagination';\r\nimport { useModal } from '../../hooks/useModal';\r\n\r\nimport './categories.scss';\r\n\r\nfunction Categories() {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectCategoriesItems);\r\n  const { totalLenCategory, currentLenCategory } = useSelector(\r\n    selectCategoriesLength,\r\n  );\r\n  const filters = useSelector(selectCategoriesFilters);\r\n  const isLoading = useSelector(selectIsCategoriesLoading);\r\n  const location = useLocation();\r\n\r\n  const [handleHideModal, handleShowModal, showModal] = useModal();\r\n\r\n  const { search, page, limit, sort, order } = filters;\r\n\r\n  const handleFetchCategories = () => {\r\n    dispatch(fetchCategories(filters));\r\n  };\r\n\r\n  const handleAddCategory = (data: any) => {\r\n    dispatch(requestAddCategory(data));\r\n    handleHideModal(undefined);\r\n  };\r\n\r\n  const handleCategoriesFilters = (payload: any) => {\r\n    dispatch(setCategoriesFilters(payload));\r\n  };\r\n\r\n  const handleClearCategories = () => {\r\n    dispatch(clearCategories());\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchCategories();\r\n    return () => {\r\n      if (window.location.pathname !== location.pathname) {\r\n        handleClearCategories();\r\n      }\r\n    };\r\n  }, [filters]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <BlockHead>\r\n          {filters && (\r\n            <ControlPanel\r\n              title={'categories list'}\r\n              onSubmit={() => handleShowModal('AddCategory')}\r\n              handleFilter={handleCategoriesFilters}\r\n            />\r\n          )}\r\n        </BlockHead>\r\n        <BlockBody>\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : (\r\n            <>\r\n              {totalLenCategory !== null && (\r\n                <Pagination\r\n                  maxPosts={\r\n                    search === '' ? totalLenCategory : currentLenCategory\r\n                  }\r\n                  page={page}\r\n                  limit={limit}\r\n                  handlePaginate={handleCategoriesFilters}\r\n                />\r\n              )}\r\n              <ListCategories categories={categories} />\r\n            </>\r\n          )}\r\n        </BlockBody>\r\n      </Layout>\r\n      <Modal\r\n        title={'Add Category'}\r\n        isOpen={showModal === 'AddCategory'}\r\n        onCancel={handleHideModal}\r\n      >\r\n        <AddEditCategory\r\n          handleCategory={handleAddCategory}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n","import React from 'react'\r\nimport { formatLinkImg } from '../../../../helpers/helpers';\r\nimport { TypeCategory } from '../../../../redux/categories/type/state';\r\n\r\nimport \"./CategoryInformation.scss\";\r\n\r\ntype TPropsCategoryInf = {\r\n    itemData: TypeCategory | null\r\n}\r\n\r\nfunction CategoryInformation({itemData}: TPropsCategoryInf) {\r\n    const img = formatLinkImg(itemData?.imageSrc)\r\n    return (\r\n    <div className=\"category-view--info\">\r\n        <div className=\"category-view--info__title\"><h2>Full Information category:</h2></div>\r\n        <div className=\"category-view--field\"> <span>Name:</span>  {itemData?.name}</div>\r\n        <div className=\"category-view--field\"><span>Title:</span>{itemData?.title}</div>\r\n        <div className=\"category-view--field\"><span>Img:</span>         \r\n            <img\r\n                className=\"img-responsive category-view--field__img\"\r\n                src={img}\r\n                alt={itemData?.name}\r\n                />\r\n        </div>\r\n        <span className=\"category-view--info__desc\">Description: </span>\r\n        <div className=\"category-view--field category-view--field__desc\"> \r\n           {itemData?.description}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nCategoryInformation.defaultProps = {\r\n    itemData: null\r\n}\r\n\r\nexport default CategoryInformation\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Icon from '../../../../../components/Icon/Icon'\r\n\r\nimport \"./CategoryProduct.scss\"\r\n\r\nfunction CategoryProduct({_id, name, idx}: any) {\r\n    return (\r\n        <div  className=\"category-view--item\" >\r\n            <div className=\"category-view--item__inform\">\r\n                <div className=\"category-view--item__index\">{idx}.</div>\r\n                <div className=\"category-view--item__title\">{name}</div> \r\n            </div>\r\n            <div className=\"category-view--item__controller\">\r\n                <div className=\"category-view--item__controller-item\"> <Link to={`/product/${_id}`}><Icon name={\"pencil\"} size={18}/></Link> </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryProduct\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Button from '../../../../components/Button/Button'\r\nimport { TypeProduct } from '../../../../redux/product/type/state';\r\nimport CategoryProduct from './CategoryProduct/CategoryProduct'\r\n\r\nimport \"./CategoryProductList.scss\";\r\n\r\ntype TPropsCategoryProductList = {\r\n    listProduct: TypeProduct[]\r\n}\r\n\r\nfunction CategoryProductList({listProduct}: TPropsCategoryProductList) {\r\n    const history = useHistory()\r\n    const routeProduct = () => {\r\n        history.push('/product')\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"category-view--items\">\r\n            {\r\n                listProduct.length > 0 ? (\r\n                    <>\r\n                        <div className=\"category-view--items__create-product\">\r\n                            <Button onClick={routeProduct}>\r\n                                Create Product\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"category-view--items__title\"><h2>List products:</h2> </div>\r\n                        <div className=\"category-view--list\">\r\n                            {\r\n                                listProduct.map( (item, idx: any) => (\r\n                                    <CategoryProduct {...item} key={idx} idx={idx}/>\r\n                                ))\r\n                            }\r\n   \r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"category-view--item__missing\">\r\n                        <div className=\"category-view--item-missing__title\">Items is missing.</div>\r\n                        <div className=\"category-view--item-missing__create-product\">\r\n                                <Button onClick={routeProduct}>\r\n                                    Create Product\r\n                                </Button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nCategoryProductList.defaultProps = {\r\n    CategoryProductList: []\r\n}\r\n\r\nexport default CategoryProductList\r\n","import React from 'react';\r\n\r\nimport Button from '../../../components/Button/Button';\r\n\r\nimport './deleteCategory.scss';\r\n\r\n\r\n\r\nfunction DeleteCategory({ title, handleDeleteCategory, handleHideModal }: any) {\r\n  return (\r\n    <div className=\"category--delete\">\r\n      <div className=\"category--delete__filed\">\r\n        <h3 className=\"category--delete__filed-text\">\r\n          Remove category {title} ?\r\n        </h3>\r\n      </div>\r\n      <div className=\"category--delete__filed\">\r\n        <div className=\"category--delete__filed-button\">\r\n          <Button onClick={handleDeleteCategory} className={'accent'}>\r\n            Delete\r\n          </Button>\r\n          <Button onClick={handleHideModal}>Cancel</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDeleteCategory.defaultProps  = {\r\n  title: '',\r\n  handleDeleteCategory: () => {},\r\n  handleHideModal: () => {}\r\n}\r\n\r\nexport default DeleteCategory;\r\n","import { Action } from 'redux';\r\nimport { TypeProduct } from '../../products/type/state';\r\nimport { LoadingState, TypeCategory } from './state';\r\n\r\nexport enum CategoryActionTypes {\r\n  SET_LOADING_STATE = 'category/SET_LOADING_STATE',\r\n  REQUEST_FIND_BY_ID_CATEGORY = 'category/REQUEST_FIND_BY_ID_CATEGORY',\r\n  SET_CATEGORY = 'category/SET_CATEGORY',\r\n  REQUEST_FETCH_PRODUCTS_FOR_CATEGORY = 'category/REQUEST_FETCH_PRODUCTS_FOR_CATEGORY',\r\n  SET_PRODUCTS_FOR_CATEGORY = 'category/SET_PRODUCTS_FOR_CATEGORY',\r\n  CLEAR_CATEGORY = 'category/CLEAR_CATEGORY',\r\n  REQUEST_PUT_CATEGORY = 'category/REQUEST_PUT_CATEGORY',\r\n  PUT_CATEGORY = 'category/PUT_CATEGORY',\r\n  REQUEST_DELETE_CATEGORY = 'category/REQUEST_DELETE_CATEGORY',\r\n  DELETE_CATEGORY = 'category/DELETE_CATEGORY',\r\n}\r\n\r\nexport interface RequestPutCategoryActionInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.REQUEST_PUT_CATEGORY;\r\n  payload: any;\r\n}\r\n\r\nexport interface PutCategoryActionInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.PUT_CATEGORY;\r\n  payload: any;\r\n}\r\n\r\nexport interface ClearCategoryActionInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.CLEAR_CATEGORY;\r\n}\r\n\r\nexport interface SetLoadingStateActionInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.SET_LOADING_STATE;\r\n  payload: LoadingState;\r\n}\r\n\r\nexport interface RequestFindByIdCategoryInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.REQUEST_FIND_BY_ID_CATEGORY;\r\n  payload: string;\r\n}\r\n\r\nexport interface SetCategoryInterface extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.SET_CATEGORY;\r\n  payload: TypeCategory;\r\n}\r\n\r\nexport interface RequestFetchProductsForCategoryInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.REQUEST_FETCH_PRODUCTS_FOR_CATEGORY;\r\n  payload: string;\r\n}\r\nexport interface SetProductsForCategoryInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.SET_PRODUCTS_FOR_CATEGORY;\r\n  payload: TypeProduct[];\r\n}\r\n\r\nexport interface RequestDeleteCategoryActionInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.REQUEST_DELETE_CATEGORY;\r\n  payload: string;\r\n}\r\nexport interface DeleteCategoryActionInterface\r\n  extends Action<CategoryActionTypes> {\r\n  type: CategoryActionTypes.DELETE_CATEGORY;\r\n  payload: string;\r\n}\r\n\r\nexport type ActionCategory =\r\n  | SetLoadingStateActionInterface\r\n  | RequestFindByIdCategoryInterface\r\n  | SetCategoryInterface\r\n  | RequestFetchProductsForCategoryInterface\r\n  | SetProductsForCategoryInterface\r\n  | ClearCategoryActionInterface\r\n  | RequestPutCategoryActionInterface\r\n  | PutCategoryActionInterface\r\n  | RequestDeleteCategoryActionInterface\r\n  | DeleteCategoryActionInterface;\r\n","import { TypeCategory } from '../categories/type/state';\r\nimport {\r\n  CategoryActionTypes,\r\n  ClearCategoryActionInterface,\r\n  DeleteCategoryActionInterface,\r\n  PutCategoryActionInterface,\r\n  RequestDeleteCategoryActionInterface,\r\n  RequestFindByIdCategoryInterface,\r\n  RequestPutCategoryActionInterface,\r\n  SetCategoryInterface,\r\n  SetLoadingStateActionInterface,\r\n  SetProductsForCategoryInterface,\r\n} from './type/ActionTypes';\r\nimport { CategoryState, LoadingState } from './type/state';\r\n\r\nexport const setCategoryLoadingState = (\r\n  payload: LoadingState,\r\n): SetLoadingStateActionInterface => ({\r\n  type: CategoryActionTypes.SET_LOADING_STATE,\r\n  payload,\r\n});\r\n\r\nexport const requestFindByIdCategory = (\r\n  payload: string,\r\n): RequestFindByIdCategoryInterface => ({\r\n  type: CategoryActionTypes.REQUEST_FIND_BY_ID_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const setCategory = (payload: TypeCategory): SetCategoryInterface => ({\r\n  type: CategoryActionTypes.SET_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const setProductsForCategory = (\r\n  payload: CategoryState['listProduct'],\r\n): SetProductsForCategoryInterface => ({\r\n  type: CategoryActionTypes.SET_PRODUCTS_FOR_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const clearCategory = (): ClearCategoryActionInterface => ({\r\n  type: CategoryActionTypes.CLEAR_CATEGORY,\r\n});\r\n\r\nexport const requetsPutCategory = (\r\n  payload: any,\r\n): RequestPutCategoryActionInterface => ({\r\n  type: CategoryActionTypes.REQUEST_PUT_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const putCategory = (payload: any): PutCategoryActionInterface => ({\r\n  type: CategoryActionTypes.PUT_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const deleteCategory = (\r\n  payload: string,\r\n): DeleteCategoryActionInterface => ({\r\n  type: CategoryActionTypes.DELETE_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const requestDeleteCategory = (\r\n  payload: string,\r\n): RequestDeleteCategoryActionInterface => ({\r\n  type: CategoryActionTypes.REQUEST_DELETE_CATEGORY,\r\n  payload,\r\n});\r\n","export enum LoadingState {\r\n  LOADED = 'LOADED',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n  NEVER = 'NEVER',\r\n}\r\n\r\nexport type TypeCategory = {\r\n  _id?: string;\r\n  name: string;\r\n  imageSrc?: any;\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\nexport type CategoryState = {\r\n  item: TypeCategory | null;\r\n  listProduct: any;\r\n  loadingState: LoadingState;\r\n};\r\n","import { TypeStateRootReducer } from './../rootReducer';\r\nimport { createSelector } from 'reselect';\r\nimport { LoadingState } from './type/state';\r\n\r\n// Categories Items\r\nexport const selectCategory = (state: TypeStateRootReducer) => state.category;\r\nexport const selectCategoryItem = createSelector(\r\n  selectCategory,\r\n  (category) => category.item,\r\n);\r\nexport const selectCategoryListProduct = createSelector(\r\n  selectCategory,\r\n  (category) => category.listProduct,\r\n);\r\n// Categories Loading\r\nexport const selectLoadingState = (state: TypeStateRootReducer): LoadingState =>\r\n  selectCategory(state).loadingState;\r\nexport const selectIsCategoryLoading = (state: TypeStateRootReducer): boolean =>\r\n  selectLoadingState(state) === LoadingState.LOADING;\r\nexport const selectIsCategoryLoadead = (state: TypeStateRootReducer): boolean =>\r\n  selectLoadingState(state) === LoadingState.LOADED;\r\n","import React from 'react';\r\n\r\nimport Icon from '../../../../components/Icon/Icon';\r\nimport { TypeModal } from '../../../../hooks/useModal';\r\n\r\nimport './BlockHeadView.scss';\r\n\r\ntype TPropsBlockHeadView = {\r\n  title?: string,\r\n  handleBackLocation?: () => void,\r\n  handleShowModal: (...args: any) => TypeModal,\r\n  viewTools: string[]\r\n}\r\n\r\nfunction BlockHeadView({\r\n  title,\r\n  handleBackLocation,\r\n  handleShowModal,\r\n  viewTools,\r\n}: TPropsBlockHeadView) {\r\n  return (\r\n    <div className=\"block-head-view\">\r\n      <div className=\"block-head-view--back\" onClick={handleBackLocation}>\r\n        <Icon name={'arrow-left'} size={40} />\r\n      </div>\r\n      <div className=\"block-head-view--title\">\r\n        <h2 className=\"block-head-view--title__text\">{title}</h2>\r\n      </div>\r\n      <div className=\"block-head-view--controller\">\r\n        {viewTools.includes('edit') && (\r\n          <div\r\n            className=\"block-head-view--edit\"\r\n            onClick={() => handleShowModal('EditCategory')}\r\n          >\r\n            <Icon name={'pencil'} size={30} />\r\n          </div>\r\n        )}\r\n        {viewTools.includes('delete') && (\r\n          <div\r\n            className=\"block-head-view--delete\"\r\n            onClick={() => handleShowModal('DeleteCategory')}\r\n          >\r\n            <Icon name={'trash'} size={30} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBlockHeadView.propTypes = {\r\n  title: '',\r\n  handleBackLocation: () => undefined,\r\n  handleShowModal: () => undefined,\r\n  viewTools: [''],\r\n};\r\n\r\nexport default BlockHeadView;\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Layout from '../../../components/Layout/Layout'\r\nimport BlockHead from \"../../../components/Layout/BlockHead/BlockHead\";\r\nimport BlockBody from '../../../components/Layout/BlockBody/BlockBody'\r\nimport Loading from '../../../components/Loading/Loading';\r\nimport CategoryInformation from './CategoryInformation/CategoryInformation';\r\nimport CategoryProductList from './CategoryProductList/CategoryProductList';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport AddEditCategory from '../AddEditCategories/AddEditCategory';\r\nimport DeleteCategory from '../DeleteCategory/DeleteCategory';\r\n\r\nimport { clearCategory, requestDeleteCategory, requestFindByIdCategory, requetsPutCategory } from '../../../redux/category/actions';\r\nimport { selectCategory, selectIsCategoryLoading } from '../../../redux/category/selectors';\r\n\r\nimport BlockHeadView from '../../../components/Layout/BlockHead/BlockHeadView/BlockHeadView';\r\nimport { useModal } from '../../../hooks/useModal';\r\n\r\nimport \"./categoryView.scss\"\r\n\r\nfunction CategoryView() {\r\n    const dispatch = useDispatch()\r\n    let { id } = useParams<any>();\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let isLoading = useSelector(selectIsCategoryLoading)\r\n    let category = useSelector(selectCategory)\r\n    let {item, listProduct} = category\r\n\r\n    // Modal\r\n    const [ handleHideModal, handleShowModal, showModal ] = useModal()\r\n\r\n    const handleBackLocation = () => {\r\n        history.push('/categories')\r\n    }\r\n\r\n    const handleGetCategory = () => {\r\n        dispatch(requestFindByIdCategory(id))\r\n    }\r\n\r\n    // Редактирование категории\r\n    const handleEditCategory = (categoryData: any) => {\r\n        const payload = {\r\n            id,\r\n            categoryData\r\n        }\r\n        dispatch(requetsPutCategory(payload))\r\n        handleHideModal();\r\n      }\r\n\r\n    // удаление категории\r\n    const handleDeleteCategory = () => {\r\n        dispatch(requestDeleteCategory(id))\r\n        handleBackLocation()\r\n    } \r\n\r\n    React.useEffect( () => {\r\n        handleGetCategory()\r\n        return () => { \r\n            if(window.location.pathname !== location.pathname) {\r\n                dispatch(clearCategory()) \r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <Layout>\r\n            <BlockHead>\r\n                <BlockHeadView \r\n                    handleBackLocation={handleBackLocation} \r\n                    title={item?.name} \r\n                    handleShowModal={handleShowModal}\r\n                    viewTools={['edit', 'delete']}\r\n                />\r\n            </BlockHead>\r\n            <BlockBody>\r\n                {\r\n                    isLoading ? <Loading /> : (\r\n                        <>\r\n                            <div className=\"category-view--container\">\r\n                                <CategoryInformation itemData={item}/>\r\n                                <CategoryProductList listProduct={listProduct}/>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </BlockBody>\r\n        </Layout>\r\n        <Modal\r\n            title={\"Edit Category\"}\r\n            isOpen={showModal === \"EditCategory\"}\r\n            onCancel={handleHideModal}\r\n        >\r\n            <AddEditCategory item={category.item} handleCategory={handleEditCategory} handleHideModal={handleHideModal}/>\r\n        </Modal>\r\n        <Modal\r\n            title={\"Delete Category\"}\r\n            isOpen={showModal === \"DeleteCategory\"}\r\n            onCancel={handleHideModal}\r\n        >\r\n            <DeleteCategory title={item?.name}  handleDeleteCategory={handleDeleteCategory} handleHideModal={handleHideModal}/>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryView\r\n","import { Action } from 'redux';\r\nimport { LoadingState, ProductsState } from './state';\r\n\r\nexport enum ProductsActionTypes {\r\n  SET_LOADING_STATE = 'product/SET_LOADING_STATE',\r\n  REQUEST_GET_PRODUCTS = 'product/REQUEST_GET_PRODUCTS',\r\n  SET_PRODUCTS = 'product/SET_PRODUCTS',\r\n  CLEAR_PRODUCTS = 'product/CLEAR_PRODUCTS',\r\n  SET_PRODUCT_FILTER = 'product/SET_PRODUCT_FILTER',\r\n  SET_LENGTH_PRODUCTS = 'categories/SET_LENGTH_PRODUCTS',\r\n}\r\n\r\nexport interface SetLenghtProductsActionInterface\r\n  extends Action<ProductsActionTypes> {\r\n  type: ProductsActionTypes.SET_LENGTH_PRODUCTS;\r\n  payload: any;\r\n}\r\n\r\nexport interface SetLoadingStateActionInterface\r\n  extends Action<ProductsActionTypes> {\r\n  type: ProductsActionTypes.SET_LOADING_STATE;\r\n  payload: LoadingState;\r\n}\r\n\r\nexport interface RequestGetProductsActionInterface\r\n  extends Action<ProductsActionTypes> {\r\n  type: ProductsActionTypes.REQUEST_GET_PRODUCTS;\r\n  payload: any;\r\n}\r\n\r\nexport interface SetProductsActionInterface\r\n  extends Action<ProductsActionTypes> {\r\n  type: ProductsActionTypes.SET_PRODUCTS;\r\n  payload: ProductsState['items'];\r\n}\r\n\r\nexport interface ClearProductsActionInterface\r\n  extends Action<ProductsActionTypes> {\r\n  type: ProductsActionTypes.CLEAR_PRODUCTS;\r\n}\r\n\r\nexport interface SetProductFiltersActionInterface\r\n  extends Action<ProductsActionTypes> {\r\n  type: ProductsActionTypes.SET_PRODUCT_FILTER;\r\n  payload: any;\r\n}\r\n\r\nexport type ActionProducts =\r\n  | SetLoadingStateActionInterface\r\n  | RequestGetProductsActionInterface\r\n  | SetProductsActionInterface\r\n  | ClearProductsActionInterface\r\n  | SetProductFiltersActionInterface\r\n  | SetLenghtProductsActionInterface;\r\n","import {\r\n  ClearProductsActionInterface,\r\n  ProductsActionTypes,\r\n  RequestGetProductsActionInterface,\r\n  SetLenghtProductsActionInterface,\r\n  SetLoadingStateActionInterface,\r\n  SetProductFiltersActionInterface,\r\n  SetProductsActionInterface,\r\n} from './type/ActionTypes';\r\nimport { LoadingState, ProductsState } from './type/state';\r\n\r\nexport const setProductsLoadingState = (\r\n  payload: LoadingState,\r\n): SetLoadingStateActionInterface => ({\r\n  type: ProductsActionTypes.SET_LOADING_STATE,\r\n  payload,\r\n});\r\n\r\nexport const requestGetProducts = (\r\n  payload: any,\r\n): RequestGetProductsActionInterface => ({\r\n  type: ProductsActionTypes.REQUEST_GET_PRODUCTS,\r\n  payload,\r\n});\r\n\r\nexport const setProducts = (\r\n  payload: ProductsState['items'],\r\n): SetProductsActionInterface => ({\r\n  type: ProductsActionTypes.SET_PRODUCTS,\r\n  payload,\r\n});\r\n\r\nexport const clearProducts = (): ClearProductsActionInterface => ({\r\n  type: ProductsActionTypes.CLEAR_PRODUCTS,\r\n});\r\n\r\nexport const setProductFilters = (\r\n  payload: any,\r\n): SetProductFiltersActionInterface => ({\r\n  type: ProductsActionTypes.SET_PRODUCT_FILTER,\r\n  payload,\r\n});\r\n\r\nexport const setLengthProducts = (\r\n  payload: any,\r\n): SetLenghtProductsActionInterface => ({\r\n  type: ProductsActionTypes.SET_LENGTH_PRODUCTS,\r\n  payload,\r\n});\r\n","export enum LoadingState {\r\n  LOADED = 'LOADED',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n  NEVER = 'NEVER',\r\n}\r\n\r\nexport type TypeProduct = {\r\n  _id?: string;\r\n  name: string;\r\n  title: string;\r\n  image: string;\r\n  category?: string;\r\n  price: number;\r\n  height: number;\r\n  width: number;\r\n  comment: string;\r\n  description: string;\r\n};\r\n\r\nexport type TypeFiltersPorduct = {\r\n  search?: string;\r\n  page?: number;\r\n  limit?: number;\r\n  sort?: string;\r\n  order?: string;\r\n};\r\nexport type lenProducts = {\r\n  totalLenProduct: number | null;\r\n  currentLenProduct: number | null;\r\n};\r\n\r\nexport type ProductsState = {\r\n  items: TypeProduct[];\r\n  loadingState: LoadingState;\r\n  filters: TypeFiltersPorduct;\r\n  lengthProducts: lenProducts;\r\n};\r\n","import { TypeStateRootReducer } from './../rootReducer';\r\nimport { createSelector } from 'reselect';\r\nimport { LoadingState } from './type/state';\r\n\r\nexport const selectProducts = (state: TypeStateRootReducer) => state.products;\r\nexport const selectProductsItems = createSelector(\r\n  selectProducts,\r\n  (products) => products.items,\r\n);\r\nexport const selectProductsFilters = createSelector(\r\n  selectProducts,\r\n  (products) => products.filters,\r\n);\r\nexport const selectProductsLength = createSelector(\r\n  selectProducts,\r\n  (products) => products.lengthProducts,\r\n);\r\n\r\nexport const selectLoadingState = (state: TypeStateRootReducer): LoadingState =>\r\n  selectProducts(state).loadingState;\r\nexport const selectIsProductsLoading = (state: TypeStateRootReducer): boolean =>\r\n  selectLoadingState(state) === LoadingState.LOADING;\r\nexport const selectIsProductsLoadead = (state: TypeStateRootReducer): boolean =>\r\n  selectLoadingState(state) === LoadingState.LOADED;\r\n","export default __webpack_public_path__ + \"static/media/not_image.c4ba1e76.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatLinkImg } from '../../../../helpers/helpers';\r\n\r\nimport image from '../../../../styles/images/helper/not_image.png';\r\n\r\nimport './ProductItem.scss';\r\n\r\nfunction ProductItem({ _id, name, imageSrc, title }: any) {\r\n  const img = formatLinkImg(imageSrc)\r\n  return (\r\n    <Link to={`product/${_id}`}>\r\n      <div className=\"product--card\">\r\n        <h3 className=\"product--header\">{name}</h3>\r\n        <div className=\"product--card__img\">\r\n          <img\r\n            className=\"img-responsive product--card__images\"\r\n            src={img === '' ? image : img}\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"product--card__text\">\r\n          <p className=\"product--card__p\">{title}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nProductItem.defaultProps = {\r\n  name: '',\r\n  title: '',\r\n  imageSrc: '',\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from 'react';\r\n\r\nimport ProductItem from './ProductItem/ProductItem';\r\n\r\nfunction ProductList({ productsList }: any) {\r\n  return (\r\n    <div className=\"product--list\">\r\n      {productsList.map((item: any, idx: any) => (\r\n        <ProductItem key={idx} {...item} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport ControlPanel from '../../components/HomeFilters/HomeFilters';\r\nimport BlockBody from '../../components/Layout/BlockBody/BlockBody';\r\nimport BlockHead from '../../components/Layout/BlockHead/BlockHead';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport Pagination from '../../components/Pagination/Pagination';\r\nimport { clearCategories } from '../../redux/categories/actions';\r\nimport {\r\n  clearProducts,\r\n  requestGetProducts,\r\n  setProductFilters,\r\n} from '../../redux/products/actions';\r\nimport {\r\n  selectProductsItems,\r\n  selectIsProductsLoading,\r\n  selectProductsFilters,\r\n  selectProductsLength,\r\n} from '../../redux/products/selectors';\r\nimport ProductList from './ProductList/ProductList';\r\n\r\nimport './product.scss';\r\nimport { TypeFiltersPorduct } from '../../redux/products/type/state';\r\n\r\nfunction Product() {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(selectProductsItems);\r\n  const { totalLenProduct, currentLenProduct } = useSelector(\r\n    selectProductsLength,\r\n  );\r\n  const filters = useSelector(selectProductsFilters);\r\n  const isLoading = useSelector(selectIsProductsLoading);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const { search, page, limit } = filters;\r\n\r\n  const handleFetchProducs = () => {\r\n    dispatch(requestGetProducts(filters));\r\n  };\r\n\r\n  const handleCreateProductButton = () => {\r\n    history.push('/product');\r\n  };\r\n\r\n  const handleClearProduct = () => {\r\n    dispatch(clearProducts());\r\n    dispatch(clearCategories());\r\n  };\r\n\r\n  const handleProductsFilters = (payload: TypeFiltersPorduct) => {\r\n    dispatch(setProductFilters(payload));\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchProducs();\r\n    return () => {\r\n      if (window.location.pathname !== location.pathname) {\r\n        handleClearProduct();\r\n      }\r\n    };\r\n  }, [filters]);\r\n\r\n  return (\r\n    <Layout>\r\n      <BlockHead>\r\n        <ControlPanel\r\n          onSubmit={handleCreateProductButton}\r\n          title={'Products List'}\r\n          handleFilter={handleProductsFilters}\r\n        />\r\n      </BlockHead>\r\n      <BlockBody>\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            <Pagination\r\n              maxPosts={search === '' ? totalLenProduct : currentLenProduct}\r\n              page={page}\r\n              limit={limit}\r\n              handlePaginate={handleProductsFilters}\r\n            />\r\n            <ProductList productsList={products} />\r\n          </>\r\n        )}\r\n      </BlockBody>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport './TabBarNav.scss';\r\n\r\nconst TabBarNav = ({ navLabel, className, onChangeActiveTab }: any) => {\r\n  const classes = cn('nav-item', className);\r\n  return (\r\n    <button className={classes} onClick={() => onChangeActiveTab(navLabel)}>\r\n      {navLabel}\r\n    </button>\r\n  );\r\n};\r\n\r\nTabBarNav.propTypes = {\r\n  navLabel: PropTypes.string,\r\n  className: PropTypes.string,\r\n  onChangeActiveTab: PropTypes.func,\r\n};\r\n\r\nTabBarNav.defaultProps = {\r\n  navLabel: 'Tab',\r\n  className: '',\r\n  onChangeActiveTab: () => undefined,\r\n};\r\n\r\nexport default TabBarNav;\r\n","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport './TabBar.scss';\r\nimport TabBarNav from './TabNav/TabBarNav';\r\n\r\ntype TPropsTabBar = {\r\n  children: Element[];\r\n  className: string,\r\n  vertical: boolean,\r\n  [x: string]: any\r\n}\r\n\r\nfunction TabBar({ children, className, vertical, ...attrs }: any) {\r\n  const [activeTab, setActiveTab] = useState<string| null>(null);\r\n  const classes = cn('tab-bar', className, { vertical });\r\n\r\n  const getChildrenLabels = (children: any) => {\r\n    return children.map(({ props }: any) => props.label);\r\n  };\r\n\r\n  const handleSetActiveTab = (currentTab: any) => {\r\n    if (currentTab !== activeTab) {\r\n      setActiveTab(currentTab);\r\n    }\r\n  };\r\n\r\n  const renderTabs = () => {\r\n    return getChildrenLabels(children).map((navLabel: any) => (\r\n      <TabBarNav\r\n        key={navLabel}\r\n        navLabel={navLabel}\r\n        className={cn({ active: activeTab === navLabel })}\r\n        onChangeActiveTab={setActiveTab}\r\n      />\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSetActiveTab(getChildrenLabels(children)[0]);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes} {...attrs}>\r\n      <div className=\"tab-bar-nav\">{renderTabs()}</div>\r\n      <div className=\"tab-container\">\r\n        {React.Children.map(children, (child: any) =>\r\n          React.cloneElement(child, { activeTab }),\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTabBar.propTypes = {\r\n  children: null,\r\n  className: '',\r\n  vertical: false,\r\n};\r\n\r\nexport default TabBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport './TabBarItem.scss';\r\n\r\nconst TabBarItem = ({ children, label, activeTab, ...attrs }: any) => {\r\n  const classes = cn('tab-bar-item', { active: activeTab === label });\r\n  return (\r\n    <div className={classes} {...attrs}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nTabBarItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n  activeTab: PropTypes.string,\r\n};\r\n\r\nTabBarItem.defaultProps = {\r\n  children: null,\r\n  activeTab: null,\r\n};\r\n\r\nexport default TabBarItem;\r\n","import React from 'react';\r\nimport { Quill } from 'react-quill';\r\n\r\nconst CustomUndo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst CustomRedo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nfunction undoChange() {\r\n  // @ts-ignore\r\n  this.quill.history.undo();\r\n}\r\nfunction redoChange() {\r\n  // @ts-ignore\r\n  this.quill.history.redo();\r\n}\r\n\r\nconst Size = Quill.import('formats/size');\r\nSize.whitelist = ['extra-small', 'small', 'medium', 'large'];\r\nQuill.register(Size, true);\r\n\r\nconst Font = Quill.import('formats/font');\r\nFont.whitelist = [\r\n  'arial',\r\n  'comic-sans',\r\n  'courier-new',\r\n  'georgia',\r\n  'helvetica',\r\n  'lucida',\r\n];\r\nQuill.register(Font, true);\r\n\r\nexport const modules = {\r\n  toolbar: {\r\n    container: '#toolbar',\r\n    handlers: {\r\n      undo: undoChange,\r\n      redo: redoChange,\r\n    },\r\n  },\r\n  history: {\r\n    delay: 500,\r\n    maxStack: 100,\r\n    userOnly: true,\r\n  },\r\n};\r\n\r\nexport const formats = [\r\n  'header',\r\n  'font',\r\n  'size',\r\n  'bold',\r\n  'italic',\r\n  'underline',\r\n  'align',\r\n  'strike',\r\n  'script',\r\n  'blockquote',\r\n  'background',\r\n  'list',\r\n  'bullet',\r\n  'indent',\r\n  'color',\r\n  'code-block',\r\n  'link',\r\n];\r\n\r\nexport const QuillToolbar = () => (\r\n  <div id=\"toolbar\">\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-font\" defaultValue=\"arial\">\r\n        <option value=\"arial\">Arial</option>\r\n        <option value=\"comic-sans\">Comic Sans</option>\r\n        <option value=\"courier-new\">Courier New</option>\r\n        <option value=\"georgia\">Georgia</option>\r\n        <option value=\"helvetica\">Helvetica</option>\r\n        <option value=\"lucida\">Lucida</option>\r\n      </select>\r\n      <select className=\"ql-size\" defaultValue=\"medium\">\r\n        <option value=\"extra-small\">Size 1</option>\r\n        <option value=\"small\">Size 2</option>\r\n        <option value=\"medium\">Size 3</option>\r\n        <option value=\"large\">Size 4</option>\r\n      </select>\r\n      <select className=\"ql-header\" defaultValue=\"3\">\r\n        <option value=\"1\">Heading</option>\r\n        <option value=\"2\">Subheading</option>\r\n        <option value=\"3\">Normal</option>\r\n      </select>\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-bold\" />\r\n      <button className=\"ql-italic\" />\r\n      <button className=\"ql-underline\" />\r\n      <button className=\"ql-strike\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-list\" value=\"ordered\" />\r\n      <button className=\"ql-list\" value=\"bullet\" />\r\n      <button className=\"ql-indent\" value=\"-1\" />\r\n      <button className=\"ql-indent\" value=\"+1\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-script\" value=\"super\" />\r\n      <button className=\"ql-script\" value=\"sub\" />\r\n      <button className=\"ql-blockquote\" />\r\n      <button className=\"ql-direction\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-align\" />\r\n      <select className=\"ql-color\" />\r\n      <select className=\"ql-background\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-link\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-formula\" />\r\n      <button className=\"ql-code-block\" />\r\n      <button className=\"ql-clean\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-undo\">\r\n        <CustomUndo />\r\n      </button>\r\n      <button className=\"ql-redo\">\r\n        <CustomRedo />\r\n      </button>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default QuillToolbar;\r\n","import React from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport showdown from 'showdown';\r\nimport _ from 'lodash';\r\n\r\nimport EditorToolbar, { modules, formats } from './EditorToolbar';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport './Editor.scss';\r\n\r\ntype TPropsEditor = {\r\n  deascriptionData?: string\r\n  getValueEditor: (...arg: any) => any\r\n}\r\n\r\nexport const Editor = ({ getValueEditor, deascriptionData }: TPropsEditor) => {\r\n  const converter = new showdown.Converter();\r\n  const [state, setState] = React.useState<any>({ value: null });\r\n\r\n  const handleChange = _.debounce((value: any) => {\r\n    setState({ value });\r\n    getValueEditor(converter.makeMarkdown(value));\r\n  }, 300);\r\n\r\n  React.useEffect(() => {\r\n    if (deascriptionData) {\r\n      const value = converter.makeHtml(deascriptionData);\r\n      setState({ value });\r\n    }\r\n  }, [deascriptionData]);\r\n\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        theme=\"snow\"\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        placeholder={'Enter text..'}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nEditor.defaultProps = {\r\n  getValueEditor: () => {},\r\n  deascriptionData: '',\r\n};\r\n\r\nexport default Editor;\r\n","import React from 'react'\r\n\r\nimport TabBar from '../../../../../components/Tabs/TabBar'\r\nimport TabBarItem from '../../../../../components/Tabs/TabBarItem/TabBarItem'\r\nimport Input from '../../../../../components/Input/Input'\r\nimport Select from '../../../../../components/Select/SelectComponent'\r\nimport FileInput from '../../../../../components/FileInput/FileInput'\r\nimport Textarea from '../../../../../components/Textarea/TextareaComponent'\r\nimport Editor from '../../../../../components/Editor/Editor'\r\nimport Button from '../../../../../components/Button/Button'\r\n\r\nfunction Form({\r\n    handleSubmit, \r\n    onSubmit, \r\n    register, \r\n    errors, \r\n    handleCategorySetProduct, \r\n    currentCategory, \r\n    options, \r\n    handleEditorSetProduct,\r\n    descData,\r\n    img\r\n    }: any) {\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"category-modal\">\r\n            <div className=\"product-view--title\">\r\n                <h2>Product Information</h2>\r\n            </div>\r\n            <TabBar>\r\n                <TabBarItem label=\"Main\">\r\n                    <div className=\"product-view--field \">\r\n                        <Input\r\n                            name=\"name\"\r\n                            id=\"ProductName\"\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            inputRef={register({ required: true })}\r\n                            required\r\n                            error={errors.name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"product-view--field \">\r\n                        <Input\r\n                            name=\"title\"\r\n                            id=\"ProductTitle\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            required\r\n                            inputRef={register({ required: true })}\r\n                            error={errors.title}\r\n                        />\r\n                    </div>\r\n                    <div className=\"product-view--field product-view--field-inline\">\r\n                        <h4>Category:</h4>\r\n                        <div className=\"product-view--select\">\r\n                            <Select \r\n                                handleCheckedSelect={handleCategorySetProduct}\r\n                                titleSelect={ !currentCategory ? \"Select category\" : currentCategory?.name } \r\n                                options={options} \r\n                                iconSize={18}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"product-view--field\">\r\n                        <h4>File Image:</h4>\r\n                        <img  className=\"img-responsive product-view--image\" src={img} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"product-view--field\">\r\n                        <FileInput \r\n                            name=\"image\"\r\n                            inputRef={register()}\r\n                            error={errors.image}\r\n                        />\r\n                    </div>\r\n                </TabBarItem>\r\n                <TabBarItem label=\"Details\">\r\n                    <div className=\"product-view--field \">\r\n                        <Input\r\n                            name=\"price\"\r\n                            id=\"ProductPrice\"\r\n                            label=\"Price $\"\r\n                            type=\"number\"\r\n                            inputRef={register()}\r\n                            error={errors.price}\r\n                        />\r\n                    </div>\r\n                    <div className=\"product-view--field product-view--field-inline\">\r\n                        <Input\r\n                            name=\"height\"\r\n                            id=\"ProductHeight\"\r\n                            label=\"Height\"\r\n                            type=\"number\"\r\n                            inputRef={register()}\r\n                            error={errors.height}\r\n                        />\r\n                        <Input\r\n                            name=\"width\"\r\n                            id=\"ProductWidth\"\r\n                            label=\"Width\"\r\n                            type=\"number\"\r\n                            inputRef={register()}\r\n                            error={errors.width}\r\n                        />\r\n                    </div>\r\n                    <div className=\"product-view--field\">\r\n                        <h4>Comment:</h4>\r\n                        <Textarea \r\n                            name=\"comment\" \r\n                            inputRef={register()}\r\n                            error={errors.comment}\r\n                        />\r\n                    </div>\r\n                </TabBarItem>\r\n                <TabBarItem label=\"Description\">\r\n                    <Editor getValueEditor={handleEditorSetProduct} deascriptionData={descData}/>\r\n                </TabBarItem>\r\n            </TabBar>\r\n            <div>\r\n                <Button type=\"submit\">Save</Button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n\r\n}\r\n\r\nexport default Form\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { FILE_SIZE, SUPPORTED_FORMATS } from '../../../../helpers/constans';\r\nimport { selectCategoriesById } from '../../../../redux/categories/selectors';\r\nimport { formatLinkImg } from '../../../../helpers/helpers';\r\nimport Form from './Form/Form';\r\n\r\nexport type TypeProductForm = {\r\n    _id: string;\r\n    name: string;\r\n    title: string;\r\n    image: object | string;\r\n    category: string | null;\r\n    price: number | null;\r\n    height: number | null;\r\n    width: number | null;\r\n    comment: string,\r\n    description: string ;\r\n}\r\n\r\nconst Schema = yup.object().shape({\r\n    _id: yup.string(),\r\n    name: yup.string().required(\"This field is required.\"),\r\n    title: yup.string().required(\"This field is required.\"),\r\n    image: yup.mixed().required(\"You need provide file.\").test('fileSize', \"File upload error.\", (value) => {\r\n      return value[0] && value[0].size <= FILE_SIZE\r\n    }).test(\r\n      \"fileFormat\",\r\n      \"Unsupported Format\",\r\n      (value) => {\r\n        return value[0] && SUPPORTED_FORMATS.includes(value[0].type)}\r\n    ),\r\n    category: yup.string(),\r\n    price: yup.number(),\r\n    height: yup.number(),\r\n    width: yup.number(),\r\n    comment: yup.string(),\r\n    description: yup.string().required('This field is required.')\r\n  });  \r\n\r\nfunction ProductViewForm({categories, handleCreateOrEditProduct, product}: any) {\r\n   const categoriesData = [...categories]\r\n   const options = categoriesData.map( (item: any) => item.name )\r\n   const [currentCategory] = useSelector(state => selectCategoriesById(state, product?.category))\r\n\r\n   const { register, handleSubmit, errors, setValue, getValues  } = useForm<TypeProductForm>({\r\n    defaultValues: {\r\n        _id: product?._id || '',\r\n        name: product?.name,\r\n        title: product?.title,\r\n        image: product?.image || '',\r\n        category: product?.category,\r\n        price: product?.price || null,\r\n        height: product?.height || null,\r\n        width: product?.width || null,\r\n        comment: product?.comment || '',\r\n        description: product?.description \r\n    },\r\n    //@ts-ignore\r\n    resolver: yupResolver(Schema)\r\n  });\r\n\r\n  const onSubmit = (data: TypeProductForm) => {\r\n    handleCreateOrEditProduct(data)\r\n  };\r\n\r\n    const handleCategorySetProduct = (data: any) => {\r\n        let {_id} = categoriesData.find( (item: any) => item.name === data )\r\n        setValue('category', _id)\r\n    }\r\n\r\n    const handleEditorSetProduct = (description: any) => {\r\n        setValue('description', description)\r\n    }\r\n\r\n    const handleSetPorductData = () => {   \r\n        for(let [item, value] of Object.entries(product)) {\r\n            setValue(item, value);\r\n        }  \r\n    }\r\n\r\n    useEffect(() => {\r\n        register(\"_id\");\r\n        register(\"description\");\r\n        register(\"category\");\r\n        if(product) {\r\n            handleSetPorductData()\r\n        }\r\n    }, [product])\r\n\r\n    const descData = getValues('description')\r\n\r\n    const img = formatLinkImg(product?.imageSrc)\r\n\r\n    return <Form \r\n        //@ts-ignore\r\n        handleSubmit={handleSubmit}\r\n        onSubmit={onSubmit}\r\n        register={register}\r\n        errors={errors}\r\n        handleCategorySetProduct={handleCategorySetProduct}\r\n        currentCategory={currentCategory}\r\n        options={options}\r\n        handleEditorSetProduct={handleEditorSetProduct}\r\n        descData={descData}\r\n        img={img}\r\n    />\r\n}\r\n\r\nProductViewForm.defaultProps = {\r\n    product: undefined,\r\n    categories: [],\r\n    handleCreateProduct: () => {}\r\n}\r\n\r\nexport default ProductViewForm\r\n","import { Action } from 'redux';\r\nimport { LoadingState, TypeProduct } from './state';\r\n\r\nexport enum ProductActionTypes {\r\n  SET_LOADING_STATE = 'product/SET_LOADING_STATE',\r\n  REQUEST_FIND_BY_ID_PRODUCT = 'product/REQUEST_FIND_BY_ID_PRODUCT',\r\n  SET_PRODUCT = 'product/SET_PRODUCT',\r\n  REQUEST_CREATE_PRODUCT = 'product/REQUEST_CREATE_PRODUCT',\r\n  REQUEST_DELETE_PRODUCT = 'product/REQUEST_DELETE_PRODUCT',\r\n  DELETE_PRODUCT = 'product/DELETE_PRODUCT',\r\n  REQUEST_PUT_PRODUCT = 'product/REQUEST_PUT_PRODUCT',\r\n  PUT_PRODUCT = 'product/PUT_PRODUCT',\r\n  CLEAR_PRODUCT = 'product/CLEAR_PRODUCT',\r\n}\r\n\r\nexport interface SetLoadingStateActionInterface\r\n  extends Action<ProductActionTypes> {\r\n  type: ProductActionTypes.SET_LOADING_STATE;\r\n  payload: LoadingState;\r\n}\r\n\r\nexport interface RequestPutProductActionInterface\r\n  extends Action<ProductActionTypes> {\r\n  type: ProductActionTypes.REQUEST_PUT_PRODUCT;\r\n  payload: any;\r\n}\r\nexport interface ClearProductActionInterface\r\n  extends Action<ProductActionTypes> {\r\n  type: ProductActionTypes.CLEAR_PRODUCT;\r\n}\r\n\r\nexport interface RequestCreateProductActionInterface\r\n  extends Action<ProductActionTypes> {\r\n  type: ProductActionTypes.REQUEST_CREATE_PRODUCT;\r\n  payload: any;\r\n}\r\n\r\nexport interface RequetsFindByIdProduct extends Action<ProductActionTypes> {\r\n  type: ProductActionTypes.REQUEST_FIND_BY_ID_PRODUCT;\r\n  payload: string;\r\n}\r\nexport interface RequetsDeleteProductActionInterface\r\n  extends Action<ProductActionTypes> {\r\n  type: ProductActionTypes.REQUEST_DELETE_PRODUCT;\r\n  payload: any;\r\n}\r\n\r\nexport interface SetProductActionInterface extends Action<ProductActionTypes> {\r\n  type: ProductActionTypes.SET_PRODUCT;\r\n  payload: TypeProduct;\r\n}\r\n\r\nexport type ActionProduct =\r\n  | SetLoadingStateActionInterface\r\n  | RequetsFindByIdProduct\r\n  | SetProductActionInterface\r\n  | RequestCreateProductActionInterface\r\n  | RequestPutProductActionInterface\r\n  | RequetsDeleteProductActionInterface\r\n  | SetProductActionInterface\r\n  | RequestCreateProductActionInterface\r\n  | ClearProductActionInterface;\r\n","import {\r\n  ProductActionTypes,\r\n  SetLoadingStateActionInterface,\r\n  RequestCreateProductActionInterface,\r\n  SetProductActionInterface,\r\n  RequetsFindByIdProduct,\r\n  ClearProductActionInterface,\r\n  RequestPutProductActionInterface,\r\n  RequetsDeleteProductActionInterface,\r\n} from './type/ActionTypes';\r\nimport { LoadingState, TypeProduct } from './type/state';\r\n\r\nexport const setProductLoadingState = (\r\n  payload: LoadingState,\r\n): SetLoadingStateActionInterface => ({\r\n  type: ProductActionTypes.SET_LOADING_STATE,\r\n  payload,\r\n});\r\n\r\nexport const requestCreateProduct = (\r\n  payload: any,\r\n): RequestCreateProductActionInterface => ({\r\n  type: ProductActionTypes.REQUEST_CREATE_PRODUCT,\r\n  payload,\r\n});\r\n\r\nexport const requestPutProduct = (\r\n  payload: any,\r\n): RequestPutProductActionInterface => ({\r\n  type: ProductActionTypes.REQUEST_PUT_PRODUCT,\r\n  payload,\r\n});\r\n\r\nexport const setProduct = (\r\n  payload: TypeProduct,\r\n): SetProductActionInterface => ({\r\n  type: ProductActionTypes.SET_PRODUCT,\r\n  payload,\r\n});\r\n\r\nexport const requestFindByIdProduct = (\r\n  payload: string,\r\n): RequetsFindByIdProduct => ({\r\n  type: ProductActionTypes.REQUEST_FIND_BY_ID_PRODUCT,\r\n  payload,\r\n});\r\n\r\nexport const clearProduct = (): ClearProductActionInterface => ({\r\n  type: ProductActionTypes.CLEAR_PRODUCT,\r\n});\r\n\r\nexport const requetsDeleteProduct = (\r\n  payload: any,\r\n): RequetsDeleteProductActionInterface => ({\r\n  type: ProductActionTypes.REQUEST_DELETE_PRODUCT,\r\n  payload,\r\n});\r\n","export enum LoadingState {\r\n  LOADED = 'LOADED',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n  NEVER = 'NEVER',\r\n}\r\n\r\nexport type TypeProduct = {\r\n  _id?: string;\r\n  name: string;\r\n  title: string;\r\n  image: string;\r\n  category?: string;\r\n  price: number;\r\n  height: number;\r\n  width: number;\r\n  comment: string;\r\n  description: string;\r\n};\r\n\r\nexport type ProductState = {\r\n  item: TypeProduct | null;\r\n  loadingState: LoadingState;\r\n};\r\n","import { TypeStateRootReducer } from './../rootReducer';\r\nimport { createSelector } from 'reselect';\r\nimport { LoadingState } from './type/state';\r\n\r\n// Categories Items\r\nexport const selectProduct = (state: TypeStateRootReducer) => state.product;\r\nexport const selectProductItem = createSelector(\r\n  selectProduct,\r\n  (product) => product.item,\r\n);\r\n\r\n// Categories Loading\r\nexport const selectLoadingState = (state: TypeStateRootReducer): LoadingState =>\r\n  selectProduct(state).loadingState;\r\nexport const selectIsProductLoading = (state: TypeStateRootReducer): boolean =>\r\n  selectLoadingState(state) === LoadingState.LOADING;\r\nexport const selectIsCategoryLoadead = (state: TypeStateRootReducer): boolean =>\r\n  selectLoadingState(state) === LoadingState.LOADED;\r\n","import React from 'react';\r\n\r\nimport Button from '../../../../components/Button/Button';\r\n\r\nimport './ProductDelete.scss';\r\n\r\ntype TPropsProductDelete = {\r\n  title: string | undefined| null,\r\n  handleDeleteProduct: () => void,\r\n  handleHideModal: (...args: any) => any[]\r\n}\r\n\r\nfunction ProductDelete({ handleDeleteProduct, handleHideModal, title }: TPropsProductDelete) {\r\n  return (\r\n    <div className=\"product-view--delete\">\r\n      <div className=\"product-view--delete__filed\">\r\n        <h3 className=\"product-view--delete__filed-text\">\r\n          Remove product {title} ?\r\n        </h3>\r\n      </div>\r\n      <div className=\"product-view--delete__filed\">\r\n        <div className=\"product-view--delete__filed-button\">\r\n          <Button onClick={handleDeleteProduct} className={'accent'}>\r\n            Delete\r\n          </Button>\r\n          <Button onClick={handleHideModal}>Cancel</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nProductDelete.propTypes = {\r\n  title: '',\r\n  handleDeleteProduct: () => {},\r\n  handleHideModal: () => {},\r\n};\r\n\r\nexport default ProductDelete;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport BlockBody from '../../../components/Layout/BlockBody/BlockBody';\r\nimport BlockHead from '../../../components/Layout/BlockHead/BlockHead';\r\nimport BlockHeadView from '../../../components/Layout/BlockHead/BlockHeadView/BlockHeadView';\r\nimport Layout from '../../../components/Layout/Layout';\r\nimport ProductViewForm from './ProductViewForm/ProductViewForm';\r\nimport { useModal } from '../../../hooks/useModal';\r\nimport { selectCategoriesItems } from '../../../redux/categories/selectors';\r\nimport { clearCategories, fetchAllCategories } from '../../../redux/categories/actions';\r\nimport {\r\n  clearProduct,\r\n  requestCreateProduct,\r\n  requestFindByIdProduct,\r\n  requestPutProduct,\r\n  requetsDeleteProduct,\r\n} from '../../../redux/product/actions';\r\nimport {\r\n  selectIsProductLoading,\r\n  selectProductItem,\r\n} from '../../../redux/product/selectors';\r\nimport Loading from '../../../components/Loading/Loading';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport ProductDelete from './ProductDelete/ProductDelete';\r\n\r\nimport './ProductView.scss';\r\n\r\nfunction ProductView() {\r\n  const { id } = useParams<any>();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const product = useSelector(selectProductItem);\r\n  const categoriesData = useSelector(selectCategoriesItems);\r\n  const isLoading = useSelector(selectIsProductLoading);\r\n\r\n  const [handleHideModal, handleShowModal, showModal] = useModal();\r\n\r\n  const handleFetchCategories = () => {\r\n    dispatch(fetchAllCategories());\r\n  };\r\n\r\n  const handleFetchByIdProduct = () => {\r\n    dispatch(requestFindByIdProduct(id));\r\n  };\r\n\r\n  const handleClearProduct = () => {\r\n    dispatch(clearProduct());\r\n    dispatch(clearCategories());\r\n  };\r\n\r\n  const handleCreateOrEditProduct = (productData: any) => {\r\n    if (id) {\r\n      dispatch(requestPutProduct(productData));\r\n    } else {\r\n      dispatch(requestCreateProduct({ productData, history }));\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = () => {\r\n    const payload = {\r\n      id,\r\n      history,\r\n    };\r\n    dispatch(requetsDeleteProduct(payload));\r\n    handleHideModal(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchCategories();\r\n    if (id !== undefined) {\r\n      handleFetchByIdProduct();\r\n    }\r\n    return () => {\r\n      if (window.location.pathname !== location.pathname) {\r\n        handleClearProduct();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleBackLocation = () => {\r\n    history.push('/home');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <BlockHead>\r\n          <BlockHeadView\r\n            handleBackLocation={handleBackLocation}\r\n            title={id ? product?.name : 'Create Product'}\r\n            viewTools={id ? ['delete'] : []}\r\n            handleShowModal={handleShowModal}\r\n          />\r\n        </BlockHead>\r\n        <BlockBody>\r\n          {!isLoading ? (\r\n            <ProductViewForm\r\n              product={product}\r\n              categories={categoriesData}\r\n              handleCreateOrEditProduct={handleCreateOrEditProduct}\r\n            />\r\n          ) : (\r\n            <Loading />\r\n          )}\r\n        </BlockBody>\r\n      </Layout>\r\n      <Modal\r\n        title={'Delete Category'}\r\n        isOpen={showModal === 'DeleteCategory'}\r\n        onCancel={handleHideModal}\r\n      >\r\n        <ProductDelete\r\n          title={product?.name}\r\n          handleDeleteProduct={handleDeleteProduct}\r\n          handleHideModal={handleHideModal}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductView;\r\n","import { UserData } from './state';\r\nimport { Action } from 'redux';\r\nimport { LoadingState, UserState } from './state';\r\n\r\nexport enum UsersActionTypes {\r\n  SET_LOADING_STATE = 'user/SET_LOADING_STATE',\r\n  REQUEST_REGISTER_USER = 'user/REQUEST_REGISTER_USER',\r\n  REQUEST_LOGIN_USER = 'user/REQUEST_LOGIN_USER',\r\n  SET_USER = 'user/SET_USER',\r\n  LOGAOUT_USER = 'user/LOGAOUT_USER',\r\n  CLEAR_USER = 'user/LOGAOUT_USER',\r\n}\r\n\r\nexport interface SetLoadingStateActionInterface\r\n  extends Action<UsersActionTypes> {\r\n  type: UsersActionTypes.SET_LOADING_STATE;\r\n  payload: LoadingState;\r\n}\r\n\r\nexport interface RequestRegisterUserActionInterface\r\n  extends Action<UsersActionTypes> {\r\n  type: UsersActionTypes.REQUEST_REGISTER_USER;\r\n  payload: UserData;\r\n}\r\nexport interface RequestLoginUserActionInterface\r\n  extends Action<UsersActionTypes> {\r\n  type: UsersActionTypes.REQUEST_LOGIN_USER;\r\n  payload: UserData;\r\n}\r\nexport interface LogoutUserActionInterface extends Action<UsersActionTypes> {\r\n  type: UsersActionTypes.LOGAOUT_USER;\r\n}\r\nexport interface ClearUserActionInterface extends Action<UsersActionTypes> {\r\n  type: UsersActionTypes.CLEAR_USER;\r\n}\r\nexport interface SetUserActionInterface extends Action<UsersActionTypes> {\r\n  type: UsersActionTypes.SET_USER;\r\n  payload: UserState['item'];\r\n}\r\nexport type ActionUser =\r\n  | SetLoadingStateActionInterface\r\n  | RequestRegisterUserActionInterface\r\n  | RequestLoginUserActionInterface\r\n  | LogoutUserActionInterface\r\n  | ClearUserActionInterface\r\n  | SetUserActionInterface;\r\n","import {\r\n  ClearUserActionInterface,\r\n  LogoutUserActionInterface,\r\n  RequestLoginUserActionInterface,\r\n  RequestRegisterUserActionInterface,\r\n  SetLoadingStateActionInterface,\r\n  SetUserActionInterface,\r\n  UsersActionTypes,\r\n} from './type/ActionTypes';\r\nimport { LoadingState, UserData, UserState } from './type/state';\r\n\r\n\r\nexport const setUserLoadingState = (\r\n  payload: LoadingState,\r\n): SetLoadingStateActionInterface => ({\r\n  type: UsersActionTypes.SET_LOADING_STATE,\r\n  payload,\r\n});\r\n\r\n\r\nexport const requestRegistrationUser = (\r\n  payload: UserData,\r\n): RequestRegisterUserActionInterface => ({\r\n  type: UsersActionTypes.REQUEST_REGISTER_USER,\r\n  payload,\r\n});\r\n\r\nexport const requestLoginUser = (\r\n  payload: UserData,\r\n): RequestLoginUserActionInterface => ({\r\n  type: UsersActionTypes.REQUEST_LOGIN_USER,\r\n  payload,\r\n});\r\n\r\nexport const setUser = (\r\n  payload: UserState['item'],\r\n): SetUserActionInterface => ({\r\n  type: UsersActionTypes.SET_USER,\r\n  payload,\r\n});\r\n\r\nexport const logautUser = (): LogoutUserActionInterface => ({\r\n  type: UsersActionTypes.LOGAOUT_USER,\r\n});\r\n\r\nexport const clearUser = (): ClearUserActionInterface => ({\r\n  type: UsersActionTypes.CLEAR_USER,\r\n});\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Button from '../../components/Button/Button';\r\nimport Input from '../../components/Input/Input';\r\nimport { requestRegistrationUser } from '../../redux/user/actions';\r\n\r\nimport './Register.scss';\r\n\r\nexport type LoginFormProps = {\r\n  email: string;\r\n  password: string;\r\n  firstname: string;\r\n  lastname: string;\r\n};\r\n\r\nconst LoginFormSchema = yup.object().shape({\r\n  email: yup.string().email('Invalid email .').required('Input email.'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'Min password length is 6 characters.')\r\n    .required('Input password.'),\r\n  firstname: yup.string().required('Enter your name'),\r\n  lastname: yup.string().required('Enter your lastname'),\r\n});\r\n\r\nfunction Register() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors } = useForm<LoginFormProps>({\r\n    defaultValues: {\r\n      email: 'test@test.com',\r\n      password: '123456',\r\n      firstname: 'test name',\r\n      lastname: 'last name',\r\n    },\r\n    //@ts-ignore\r\n    resolver: yupResolver(LoginFormSchema),\r\n  });\r\n\r\n  const onSubmit = (data: LoginFormProps) => {\r\n    const payload = {\r\n      history,\r\n      data,\r\n    };\r\n    dispatch(requestRegistrationUser(payload));\r\n  };\r\n\r\n  const goPageLogin = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"wrapper-form\">\r\n      <h2>Авторизация</h2>\r\n      <div className=\"form-register\">\r\n        <Input\r\n          label=\"Login\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          autoComplete=\"off\"\r\n          required\r\n          inputRef={register({ required: true })}\r\n          error={errors.email}\r\n        />\r\n      </div>\r\n      <div className=\"form-login\">\r\n        <Input\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          autoComplete=\"off\"\r\n          required\r\n          inputRef={register}\r\n          error={errors.password}\r\n        />\r\n      </div>\r\n      <div className=\"form-login\">\r\n        <Input\r\n          label=\"First Name\"\r\n          type=\"name\"\r\n          name=\"firstname\"\r\n          autoComplete=\"off\"\r\n          required\r\n          inputRef={register}\r\n          error={errors.firstname}\r\n        />\r\n      </div>\r\n      <div className=\"form-login\">\r\n        <Input\r\n          label=\"Last Name\"\r\n          type=\"name\"\r\n          name=\"lastname\"\r\n          autoComplete=\"off\"\r\n          required\r\n          inputRef={register}\r\n          error={errors.lastname}\r\n        />\r\n      </div>\r\n      <div className=\"form-controller\">\r\n        <Button className=\"accent\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n        <Button onClick={goPageLogin}>Login</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nimport Button from '../../components/Button/Button';\r\nimport Input from '../../components/Input/Input';\r\nimport { requestLoginUser } from '../../redux/user/actions';\r\n\r\nimport './signin.scss';\r\n\r\nexport type LoginFormProps = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nconst LoginFormSchema = yup.object().shape({\r\n  email: yup.string().email('Invalid email .').required('Input email.'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'Min password length is 6 characters.')\r\n    .required('Input password.'),\r\n});\r\n\r\nfunction SignIn() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors } = useForm<LoginFormProps>({\r\n    defaultValues: {\r\n      email: 'admin@admin.com',\r\n      password: '123456',\r\n    },\r\n    // @ts-ignore\r\n    resolver: yupResolver(LoginFormSchema),\r\n  });\r\n\r\n  const onSubmit = (data: LoginFormProps) => {\r\n    const payload = {\r\n      history,\r\n      data,\r\n    };\r\n    dispatch(requestLoginUser(payload));\r\n  };\r\n\r\n  const goPageRegsiter = () => {\r\n    history.push('/register');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"wrapper-form\">\r\n      <h2>Авторизация</h2>\r\n      <div className=\"form-login\">\r\n        <Input\r\n          label=\"Login\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          autoComplete=\"off\"\r\n          required\r\n          inputRef={register({ required: true })}\r\n          error={errors.email}\r\n        />\r\n      </div>\r\n      <div className=\"form-login\">\r\n        <Input\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          autoComplete=\"off\"\r\n          required\r\n          inputRef={register}\r\n          error={errors.password}\r\n        />\r\n      </div>\r\n      <div className=\"form-controller\">\r\n        <Button className=\"accent\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n        <Button onClick={goPageRegsiter}>Register</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","export enum TypesMessageAlert {\r\n  SUCCESS = 'success',\r\n  ERROR = 'error',\r\n  WARN = 'warn',\r\n  INFO = 'info',\r\n}\r\n\r\nexport type TypeAlert = {\r\n  id?: string | undefined;\r\n  message: string | null;\r\n  typeAlert: TypesMessageAlert | null;\r\n};\r\n\r\nexport type AlertState = {\r\n  listAlert: TypeAlert[];\r\n};\r\n","import {History} from '@types/history'\r\n\r\nexport enum LoadingState {\r\n  LOADED = 'LOADED',\r\n  LOADING = 'LOADING',\r\n  ERROR = 'ERROR',\r\n  NEVER = 'NEVER',\r\n}\r\n\r\nexport type UserData = {\r\n  history: History,\r\n  data: TypeDataLogin | TypeDataRegister\r\n}\r\n\r\nexport type TypeDataLogin = {\r\n  email: string;\r\n  password: string;\r\n};\r\nexport type TypeDataRegister = {\r\n  email: string;\r\n  password?: string;\r\n  firstname: string;\r\n  lastname: string;\r\n};\r\n\r\n\r\nexport type UserState = {\r\n  item: TypeDataRegister | null;\r\n  loadingState: LoadingState;\r\n  isAuth: boolean;\r\n  errors: any;\r\n};\r\n","import { TypeStateRootReducer } from './../rootReducer';\r\nimport { createSelector } from 'reselect';\r\nimport { LoadingState } from './type/state';\r\n\r\nexport const selectUser = (state: TypeStateRootReducer) => state.user;\r\nexport const selectUserItem = createSelector(\r\n  selectUser,\r\n  (products) => products.item,\r\n);\r\n\r\nexport const selectLoadingState = (state: TypeStateRootReducer): LoadingState =>\r\n  selectUser(state).loadingState;\r\nexport const selectIsUserLoading = (state: TypeStateRootReducer): boolean =>\r\n  selectLoadingState(state) === LoadingState.LOADING;\r\nexport const selectIsUserLoadead = (state: TypeStateRootReducer): boolean =>\r\n  selectLoadingState(state) === LoadingState.LOADED;\r\n\r\nexport const selectIsAuthState = (state: TypeStateRootReducer): boolean =>\r\n  selectUser(state).isAuth === true;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAlertData } from '../redux/alert/actions';\r\nimport { TypesMessageAlert } from '../redux/alert/type/state';\r\nimport { selectIsAuthState } from '../redux/user/selectors';\r\n\r\n/* eslint-disable */\r\n\r\nexport default (SpecialComponent: any) => {\r\n  return (props: any) => {\r\n    const isLoggedIn = useSelector(selectIsAuthState);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleRedirectMessage = () => {\r\n      dispatch(\r\n        setAlertData('Пожалуйста авторизируйтесь.', TypesMessageAlert.ERROR),\r\n      );\r\n    };\r\n\r\n    const redirectGoLogin = () => {\r\n      props.history.push('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (isLoggedIn === false) {\r\n        handleRedirectMessage();\r\n        redirectGoLogin();\r\n      }\r\n    }, [isLoggedIn]);\r\n\r\n    return <SpecialComponent />;\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './NotFound.scss';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"not-found-page\">\r\n      <h2>Not found page 404.</h2>\r\n      <Link to={'/'} className=\"not-found-page__redirect\">\r\n        Go login page.\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Categories from '../pages/Categories/Categories';\r\nimport CategoryView from '../pages/Categories/CategoryView/CategoryView';\r\nimport Product from '../pages/Product/Product';\r\nimport ProductView from '../pages/Product/ProductView/ProductView';\r\nimport Register from '../pages/Register/Register';\r\nimport SignIn from '../pages/SingnIn/SignIn';\r\nimport withAuth from '../hoc/withAuthRedierct';\r\nimport NotFound from '../pages/NotFound/NotFound';\r\n\r\nexport const Router = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`/`} component={SignIn} />\r\n      <Route exact path={`/register`} component={Register} />\r\n      <Route exact path={`/home`} component={Product} />\r\n      <Route exact path={`/product`} component={ProductView} />\r\n      <Route exact path={`/product/:id`} component={ProductView} />\r\n      <Route exact path={`/categories`} component={withAuth(Categories)} />\r\n      <Route exact path={`/categories/category/:id`} component={CategoryView} />\r\n      <Route path=\"*\" component={NotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Alert from './components/Alert/Alert';\r\nimport { Router } from './router/Router';\r\n\r\nimport './styles/index.scss';\r\nimport './style.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Route\r\n          exact\r\n          path={[\r\n            '/home',\r\n            '/categories',\r\n            '/dashboard',\r\n            '/categories/category/:id',\r\n            '/product',\r\n            '/product/:id',\r\n          ]}\r\n        >\r\n          <NavBar />\r\n        </Route>\r\n        <Switch>\r\n          <Route component={Router} />\r\n        </Switch>\r\n      </div>\r\n      <Alert />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import produce, { Draft } from 'immer';\r\nimport { ActionCategories, CategoriesActionTypes } from './type/ActionTypes';\r\nimport { CategoriesState, LoadingState } from './type/state';\r\n\r\nconst baseFilter = {\r\n  search: '',\r\n  page: 1,\r\n  limit: 15,\r\n  sort: 'name',\r\n  order: 'asc',\r\n};\r\n\r\nconst initialStateCategories: CategoriesState = {\r\n  items: [],\r\n  lengthCategories: {\r\n    totalLenCategory: null,\r\n    currentLenCategory: null,\r\n  },\r\n  loadingState: LoadingState.NEVER,\r\n  filters: baseFilter,\r\n};\r\n\r\nexport { baseFilter };\r\n\r\nexport const categoriesReducer = produce(\r\n  (draft: Draft<CategoriesState>, action: ActionCategories) => {\r\n    switch (action.type) {\r\n      case CategoriesActionTypes.SET_CATEGORIES_DATA:\r\n        draft.items = action.payload;\r\n        draft.loadingState = LoadingState.LOADED;\r\n        break;\r\n      case CategoriesActionTypes.CLEAR_CATEGORIES:\r\n        draft.items = [];\r\n        draft.loadingState = LoadingState.LOADING;\r\n        draft.filters = baseFilter;\r\n        draft.lengthCategories = {\r\n          totalLenCategory: null,\r\n          currentLenCategory: null,\r\n        };\r\n        break;\r\n      case CategoriesActionTypes.FETCH_ALL_CATEGORIES:\r\n      case CategoriesActionTypes.FETCH_CATEGORIES:\r\n        draft.items = [];\r\n        draft.loadingState = LoadingState.LOADING;\r\n        break;\r\n      case CategoriesActionTypes.SET_LOADING_STATE:\r\n        draft.loadingState = action.payload;\r\n        break;\r\n      case CategoriesActionTypes.ADD_CATEGORY:\r\n        draft.items.splice(0, 0, action.payload);\r\n        break;\r\n      case CategoriesActionTypes.SET_CATEGORIES_FILTER:\r\n        draft.filters[action.payload.name] = action.payload.value;\r\n        break;\r\n      case CategoriesActionTypes.SET_LENGTH_CATEGORIES:\r\n        draft.lengthCategories = {\r\n          totalLenCategory: action.payload.total,\r\n          currentLenCategory: action.payload.current,\r\n        };\r\n        break;\r\n      default:\r\n        return draft;\r\n    }\r\n  },\r\n  initialStateCategories,\r\n);\r\n","import produce, { Draft } from 'immer';\r\nimport { ActionCategory, CategoryActionTypes } from './type/ActionTypes';\r\nimport { CategoryState, LoadingState } from './type/state';\r\n\r\nconst initialStateCategory: CategoryState = {\r\n  item: null,\r\n  listProduct: [],\r\n  loadingState: LoadingState.NEVER,\r\n};\r\n\r\nexport const categoryReducer = produce(\r\n  (draft: Draft<CategoryState>, action: ActionCategory) => {\r\n    switch (action.type) {\r\n      case CategoryActionTypes.CLEAR_CATEGORY:\r\n      case CategoryActionTypes.REQUEST_FIND_BY_ID_CATEGORY:\r\n        draft.item = null;\r\n        draft.listProduct = [];\r\n        draft.loadingState = LoadingState.LOADING;\r\n        break;\r\n      case CategoryActionTypes.SET_CATEGORY:\r\n        draft.item = action.payload;\r\n        break;\r\n      case CategoryActionTypes.SET_PRODUCTS_FOR_CATEGORY:\r\n        draft.listProduct = action.payload;\r\n        break;\r\n      case CategoryActionTypes.SET_LOADING_STATE:\r\n        draft.loadingState = action.payload;\r\n        break;\r\n      case CategoryActionTypes.PUT_CATEGORY:\r\n        draft.item = action.payload;\r\n        break;\r\n      default:\r\n        return draft;\r\n    }\r\n  },\r\n  initialStateCategory,\r\n);\r\n","import produce, { Draft } from 'immer';\r\nimport { ActionProducts, ProductsActionTypes } from './type/ActionTypes';\r\nimport { LoadingState, ProductsState } from './type/state';\r\n\r\nconst baseFilter = {\r\n  search: '',\r\n  page: 1,\r\n  limit: 15,\r\n  sort: 'name',\r\n  order: 'asc',\r\n};\r\n\r\nconst initialStateProducts: ProductsState = {\r\n  items: [],\r\n  loadingState: LoadingState.NEVER,\r\n  filters: baseFilter,\r\n  lengthProducts: {\r\n    totalLenProduct: null,\r\n    currentLenProduct: null,\r\n  },\r\n};\r\n\r\nexport const productsReducer = produce(\r\n  (draft: Draft<ProductsState>, action: ActionProducts) => {\r\n    switch (action.type) {\r\n      case ProductsActionTypes.SET_LOADING_STATE:\r\n        draft.loadingState = action.payload;\r\n        break;\r\n      case ProductsActionTypes.CLEAR_PRODUCTS:\r\n        draft.items = [];\r\n        draft.filters = baseFilter;\r\n        draft.loadingState = LoadingState.NEVER;\r\n        draft.lengthProducts = {\r\n          totalLenProduct: null,\r\n          currentLenProduct: null,\r\n        };\r\n        break;\r\n      case ProductsActionTypes.REQUEST_GET_PRODUCTS:\r\n        draft.items = [];\r\n        draft.loadingState = LoadingState.LOADING;\r\n        break;\r\n      case ProductsActionTypes.SET_PRODUCTS:\r\n        draft.items = action.payload;\r\n        draft.loadingState = LoadingState.LOADED;\r\n        break;\r\n      case ProductsActionTypes.SET_PRODUCT_FILTER:\r\n        // @ts-ignore\r\n        draft.filters[action.payload.name] = action.payload.value;\r\n        break;\r\n      case ProductsActionTypes.SET_LENGTH_PRODUCTS:\r\n        draft.lengthProducts = {\r\n          totalLenProduct: action.payload.total,\r\n          currentLenProduct: action.payload.current,\r\n        };\r\n        break;\r\n      default:\r\n        return draft;\r\n    }\r\n  },\r\n  initialStateProducts,\r\n);\r\n","import produce, { Draft } from 'immer';\r\nimport { ActionProduct, ProductActionTypes } from './type/ActionTypes';\r\nimport { ProductState, LoadingState } from './type/state';\r\n\r\nconst initialStateCategory: ProductState = {\r\n  item: null,\r\n  loadingState: LoadingState.NEVER,\r\n};\r\n\r\nexport const productReducer = produce(\r\n  (draft: Draft<ProductState>, action: ActionProduct) => {\r\n    switch (action.type) {\r\n      case ProductActionTypes.REQUEST_CREATE_PRODUCT:\r\n      case ProductActionTypes.REQUEST_PUT_PRODUCT:\r\n      case ProductActionTypes.CLEAR_PRODUCT:\r\n      case ProductActionTypes.REQUEST_DELETE_PRODUCT:\r\n        draft.item = null;\r\n        draft.loadingState = LoadingState.LOADING;\r\n        break;\r\n      case ProductActionTypes.SET_LOADING_STATE:\r\n        draft.loadingState = action.payload;\r\n        break;\r\n      case ProductActionTypes.SET_PRODUCT:\r\n        draft.item = action.payload;\r\n        draft.loadingState = LoadingState.LOADED;\r\n        break;\r\n      default:\r\n        return draft;\r\n    }\r\n  },\r\n  initialStateCategory,\r\n);\r\n","import produce, { Draft } from 'immer';\r\nimport { ActionUser, UsersActionTypes } from './type/ActionTypes';\r\nimport { LoadingState, UserState } from './type/state';\r\n\r\nconst initialStateUser: UserState = {\r\n  item: null,\r\n  loadingState: LoadingState.NEVER,\r\n  isAuth: false,\r\n  errors: null,\r\n};\r\n\r\nexport const userReducer = produce(\r\n  (draft: Draft<UserState>, action: ActionUser) => {\r\n    switch (action.type) {\r\n      case UsersActionTypes.SET_LOADING_STATE:\r\n        draft.loadingState = action.payload;\r\n        break;\r\n      case UsersActionTypes.CLEAR_USER:\r\n      case UsersActionTypes.LOGAOUT_USER:\r\n        draft.item = null;\r\n        draft.loadingState = LoadingState.NEVER;\r\n        draft.isAuth = false;\r\n        draft.errors = null;\r\n        window.localStorage.clear();\r\n        break;\r\n      case UsersActionTypes.REQUEST_LOGIN_USER:\r\n      case UsersActionTypes.REQUEST_REGISTER_USER:\r\n        draft.item = null;\r\n        draft.isAuth = false;\r\n        draft.loadingState = LoadingState.LOADING;\r\n        break;\r\n      case UsersActionTypes.SET_USER:\r\n        draft.item = action.payload;\r\n        draft.isAuth = true;\r\n        draft.loadingState = LoadingState.LOADED;\r\n        break;\r\n      default:\r\n        return draft;\r\n    }\r\n  },\r\n  initialStateUser,\r\n);\r\n","import produce, { Draft } from 'immer';\r\nimport { uid } from 'uid';\r\nimport { ActionAlert, AlertActionTypes } from './type/ActionTypes';\r\nimport { AlertState, TypeAlert } from './type/state';\r\n\r\nconst initialStateAlert: AlertState = {\r\n  listAlert: [],\r\n};\r\n\r\nexport const alertReducer = produce(\r\n  (draft: Draft<AlertState>, action: ActionAlert) => {\r\n    switch (action.type) {\r\n      case AlertActionTypes.SET_ALERT_DATA:\r\n        const { message, typeAlert } = action.payload;\r\n        const alert: TypeAlert = {\r\n          id: uid(16),\r\n          message,\r\n          typeAlert,\r\n        };\r\n        draft.listAlert.push(alert);\r\n        break;\r\n      case AlertActionTypes.CLEAR_ALERT_DATA:\r\n        const index = draft.listAlert.findIndex(\r\n          (item) => item.id === action.payload,\r\n        );\r\n        if (index !== -1) draft.listAlert.splice(index, 1);\r\n        break;\r\n      default:\r\n        return draft;\r\n    }\r\n  },\r\n  initialStateAlert,\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport { categoriesReducer } from './categories/reducer';\r\nimport { categoryReducer } from './category/reducer';\r\nimport { productsReducer } from './products/reducer';\r\nimport { productReducer } from './product/reducer';\r\nimport { userReducer } from './user/reducer';\r\nimport { alertReducer } from './alert/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  categories: categoriesReducer,\r\n  category: categoryReducer,\r\n  products: productsReducer,\r\n  product: productReducer,\r\n  user: userReducer,\r\n  alert: alertReducer,\r\n});\r\n\r\nexport type TypeStateRootReducer = ReturnType<typeof rootReducer>;\r\n","import axios from 'axios';\r\n\r\naxios.interceptors.request.use((config) => {\r\n  config.headers['Authorization'] = window.localStorage.getItem('token');\r\n  return config;\r\n});\r\n\r\nexport default axios;\r\n","import axios from '../api/axios';\r\nimport { CategoriesState, TypeCategory, TypeFiltersCategory } from '../redux/categories/type/state';\r\n\r\nexport const CategoriesApi = {\r\n  fetchCategories(payload: TypeFiltersCategory): Promise<CategoriesState['items']>  {\r\n    const { search, limit, page, order, sort } = payload;\r\n    return axios\r\n      .get<any>(\r\n        `/api/categories/?search=${search}&page=${page}&limit=${limit}&sort=${sort}&order=${order}`,\r\n      )\r\n      .then(({ data }) => data);\r\n  },\r\n  fetchAllCategories(): Promise<CategoriesState['items']> {\r\n    return axios.get('/api/categories/all/').then(({ data }) => data);\r\n  },\r\n  addCategories(data: TypeCategory): Promise<TypeCategory> {\r\n    return axios.post('/api/categories', data).then(({ data }) => data);\r\n  },\r\n  putCategories({ id, data }: any): Promise<TypeCategory> {\r\n    return axios.patch(`/api/categories/${id}`, data).then(({ data }) => data);\r\n  },\r\n  deleteCategories(id: string): Promise<void> {\r\n    return axios.delete(`/api/categories/${id}`).then(({ data }) => data);\r\n  },\r\n  findByIdCategories(id: string): Promise<CategoriesState['items']> {\r\n    return axios.get(`/api/categories/${id}`).then(({ data }) => data);\r\n  },\r\n};\r\n","import { formatData } from './../../helpers/helpers';\r\nimport { takeLatest, put, call } from 'redux-saga/effects';\r\n\r\nimport {\r\n  setCategories,\r\n  setCategoriesLoadingState,\r\n  addCategory,\r\n  setLengthCategories,\r\n} from './actions';\r\nimport { CategoriesActionTypes } from './type/ActionTypes';\r\nimport { LoadingState } from './type/state';\r\nimport { CategoriesApi } from '../../api/categorie-api';\r\nimport { setAlertData } from '../alert/actions';\r\nimport { TypesMessageAlert } from '../alert/type/state';\r\n\r\nexport function* watchFetchCatgories() {\r\n  yield takeLatest(\r\n    CategoriesActionTypes.FETCH_CATEGORIES,\r\n    fetchCategoriesRequest,\r\n  );\r\n}\r\nexport function* watchFetchAllCatgories() {\r\n  yield takeLatest(\r\n    CategoriesActionTypes.FETCH_ALL_CATEGORIES,\r\n    fetchAllCategoriesRequest,\r\n  );\r\n}\r\n\r\nexport function* watchAddCategory() {\r\n  yield takeLatest(\r\n    CategoriesActionTypes.REQUEST_ADD_CATEGORY,\r\n    addCategoryRequest,\r\n  );\r\n}\r\n\r\nfunction* fetchAllCategoriesRequest() {\r\n  try {\r\n    const { categories } = yield call(CategoriesApi.fetchAllCategories);\r\n\r\n    yield put(setCategories(categories));\r\n    yield put(setCategoriesLoadingState(LoadingState.LOADED));\r\n  } catch (error) {\r\n    yield put(setCategoriesLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось загузить категории.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\nfunction* fetchCategoriesRequest({ payload }: any) {\r\n  try {\r\n    const { categories, totalCategory, currentLenCategory } = yield call(\r\n      CategoriesApi.fetchCategories,\r\n      payload,\r\n    );\r\n\r\n    yield put(setCategories(categories));\r\n    yield put(\r\n      setLengthCategories({\r\n        total: totalCategory,\r\n        current: currentLenCategory,\r\n      }),\r\n    );\r\n    yield put(setCategoriesLoadingState(LoadingState.LOADED));\r\n  } catch (error) {\r\n    yield put(setCategoriesLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось загузить категории.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* addCategoryRequest({ payload }: any) {\r\n  const data = formatData(payload);\r\n  try {\r\n    const item = yield call(CategoriesApi.addCategories, data);\r\n    yield put(setAlertData('Категория сохраннена.', TypesMessageAlert.SUCCESS));\r\n    yield put(addCategory(item));\r\n  } catch (error) {\r\n    yield put(setCategoriesLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось сохранить категорию.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\n\r\nexport const categoriesAllSagas = [\r\n  watchFetchCatgories(),\r\n  watchFetchAllCatgories(),\r\n  watchAddCategory(),\r\n];\r\n","import axios from '../api/axios';\r\nimport { ProductsState, TypeFiltersPorduct, TypeProduct } from '../redux/products/type/state';\r\n\r\nexport const ProductsApi = {\r\n  findByIdProducts: (id: string): Promise<ProductsState['items']> => {\r\n    return axios\r\n      .get(`/api/products/all/?category=${id}`)\r\n      .then(({ data }) => data);\r\n  },\r\n  findByIdProduct: (id: string): Promise<TypeProduct> => {\r\n    return axios.get(`/api/products/${id}`).then(({ data }) => data);\r\n  },\r\n  fetchAllProducts: (): Promise<ProductsState['items']> => {\r\n    return axios.get(`/api/products`).then(({ data }) => data);\r\n  },\r\n  createProduct: (data: TypeProduct): Promise<TypeProduct> => {\r\n    return axios.post(`/api/products`, data).then(({ data }) => data);\r\n  },\r\n  deleteProduct: (id: string): Promise<void> => {\r\n    return axios.delete(`/api/products/${id}`).then(({ data }) => data);\r\n  },\r\n  putProduct: ({ _id, data }: any): Promise<TypeProduct> => {\r\n    return axios.put(`/api/products/${_id}`, data).then(({ data }) => data);\r\n  },\r\n  fetchProducts: (payload: TypeFiltersPorduct): Promise<ProductsState['items']>  => {\r\n    const { search, limit, page, order, sort } = payload;\r\n    return axios\r\n      .get(\r\n        `/api/products/?search=${search}&page=${page}&limit=${limit}&sort=${sort}&order=${order}`,\r\n      )\r\n      .then(({ data }) => data);\r\n  },\r\n};\r\n","import { takeLatest, put, call } from 'redux-saga/effects';\r\n\r\nimport { ProductsApi } from './../../api/products-api';\r\nimport { CategoriesApi } from '../../api/categorie-api';\r\nimport { LoadingState } from './type/state';\r\n\r\nimport {\r\n  CategoryActionTypes,\r\n  RequestDeleteCategoryActionInterface,\r\n  RequestFindByIdCategoryInterface,\r\n  RequestPutCategoryActionInterface,\r\n} from './type/ActionTypes';\r\nimport {\r\n  setCategory,\r\n  setCategoryLoadingState,\r\n  setProductsForCategory,\r\n  putCategory,\r\n} from './actions';\r\nimport { formatData } from '../../helpers/helpers';\r\nimport { TypesMessageAlert } from '../alert/type/state';\r\nimport { setAlertData } from '../alert/actions';\r\n\r\nexport function* watchFetchCategory() {\r\n  yield takeLatest(\r\n    CategoryActionTypes.REQUEST_FIND_BY_ID_CATEGORY,\r\n    requestFetchCategory,\r\n  );\r\n}\r\nexport function* watchPutCategory() {\r\n  yield takeLatest(\r\n    CategoryActionTypes.REQUEST_PUT_CATEGORY,\r\n    requestPutCategory,\r\n  );\r\n}\r\nexport function* watchDeleteCategory() {\r\n  yield takeLatest(\r\n    CategoryActionTypes.REQUEST_DELETE_CATEGORY,\r\n    deleteCategoryRequest,\r\n  );\r\n}\r\n\r\nfunction* requestFetchCategory({ payload }: RequestFindByIdCategoryInterface) {\r\n  try {\r\n    const item = yield call(CategoriesApi.findByIdCategories, payload);\r\n    const { products } = yield call(ProductsApi.findByIdProducts, payload);\r\n    yield put(setCategory(item));\r\n    yield put(setProductsForCategory(products));\r\n    yield put(setCategoryLoadingState(LoadingState.LOADED));\r\n  } catch (error) {\r\n    yield put(setCategoryLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось загузить категории.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* requestPutCategory({ payload }: RequestPutCategoryActionInterface) {\r\n  const { id, categoryData } = payload;\r\n  const data = formatData(categoryData);\r\n  try {\r\n    const item = yield call(CategoriesApi.putCategories, { id, data });\r\n    yield put(putCategory(item));\r\n    yield put(setAlertData('Категории обновленна.', TypesMessageAlert.SUCCESS));\r\n  } catch (error) {\r\n    yield put(setCategoryLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось обновить категорию.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* deleteCategoryRequest({\r\n  payload,\r\n}: RequestDeleteCategoryActionInterface) {\r\n  try {\r\n    yield call(CategoriesApi.deleteCategories, payload);\r\n    yield put(setAlertData('Категория удаленна.', TypesMessageAlert.SUCCESS));\r\n  } catch (error) {\r\n    yield put(setCategoryLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось удалить категорию.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\n\r\nexport const categoryAllSagas = [\r\n  watchFetchCategory(),\r\n  watchPutCategory(),\r\n  watchDeleteCategory(),\r\n];\r\n","import { takeLatest, put, call } from 'redux-saga/effects';\r\nimport { setProducts, setLengthProducts } from './actions';\r\nimport {\r\n  ProductsActionTypes,\r\n  RequestGetProductsActionInterface,\r\n} from './type/ActionTypes';\r\nimport { ProductsApi } from './../../api/products-api';\r\nimport { LoadingState } from './type/state';\r\nimport { setProductsLoadingState } from './actions';\r\nimport { setAlertData } from '../alert/actions';\r\nimport { TypesMessageAlert } from '../alert/type/state';\r\n\r\nexport function* watchFetchProducts() {\r\n  yield takeLatest(\r\n    ProductsActionTypes.REQUEST_GET_PRODUCTS,\r\n    requestFetchProducts,\r\n  );\r\n}\r\n\r\nfunction* requestFetchProducts({ payload }: RequestGetProductsActionInterface) {\r\n  try {\r\n    const { products, totalProducts, currentLenProduct } = yield call(\r\n      ProductsApi.fetchProducts,\r\n      payload,\r\n    );\r\n\r\n    yield put(setProducts(products));\r\n    yield put(\r\n      setLengthProducts({ total: totalProducts, current: currentLenProduct }),\r\n    );\r\n    yield put(setProductsLoadingState(LoadingState.LOADED));\r\n  } catch (error) {\r\n    yield put(setProductsLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось загрузить продукты.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\n\r\nexport const productsAllSagas = [watchFetchProducts()];\r\n","import { formatData } from './../../helpers/helpers';\r\nimport { takeLatest, put, call } from 'redux-saga/effects';\r\n\r\nimport { setProduct, setProductLoadingState } from './actions';\r\nimport {\r\n  ProductActionTypes,\r\n  RequestCreateProductActionInterface,\r\n  RequestPutProductActionInterface,\r\n  RequetsFindByIdProduct,\r\n} from './type/ActionTypes';\r\nimport { ProductsApi } from './../../api/products-api';\r\nimport { LoadingState } from './type/state';\r\nimport { setAlertData } from '../alert/actions';\r\nimport { TypesMessageAlert } from '../alert/type/state';\r\n\r\nexport function* watchCreateProduct() {\r\n  yield takeLatest(\r\n    ProductActionTypes.REQUEST_CREATE_PRODUCT,\r\n    requestCreateProduct,\r\n  );\r\n}\r\nexport function* watchPutProduct() {\r\n  yield takeLatest(ProductActionTypes.REQUEST_PUT_PRODUCT, requestPutProduct);\r\n}\r\nexport function* watchFindByIdProduct() {\r\n  yield takeLatest(\r\n    ProductActionTypes.REQUEST_FIND_BY_ID_PRODUCT,\r\n    findByIdProduct,\r\n  );\r\n}\r\nexport function* watchDeleteProduct() {\r\n  yield takeLatest(\r\n    ProductActionTypes.REQUEST_DELETE_PRODUCT,\r\n    requestDeleteProduct,\r\n  );\r\n}\r\n\r\nfunction* requestCreateProduct({\r\n  payload,\r\n}: RequestCreateProductActionInterface) {\r\n  const { productData, history } = payload;\r\n  const data = formatData(productData);\r\n  try {\r\n    const product = yield call(ProductsApi.createProduct, data);\r\n    yield put(setProduct(product));\r\n    yield put(setProductLoadingState(LoadingState.LOADED));\r\n    yield history.push(`/product/${product._id}`);\r\n    yield put(setAlertData('Продукт сохранен.', TypesMessageAlert.SUCCESS));\r\n  } catch (error) {\r\n    yield put(setProductLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось сохранить продукт.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* requestPutProduct({ payload }: RequestPutProductActionInterface) {\r\n  const { _id, ...productData } = payload;\r\n  const data = formatData(productData);\r\n  try {\r\n    const product = yield call(ProductsApi.putProduct, { _id, data });\r\n    yield put(setProduct(product));\r\n    yield put(setProductLoadingState(LoadingState.LOADED));\r\n    yield put(setAlertData('Продукт обновлен.', TypesMessageAlert.SUCCESS));\r\n  } catch (error) {\r\n    yield put(setProductLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось обновить продукт.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\nfunction* requestDeleteProduct({ payload }: RequestPutProductActionInterface) {\r\n  const { id, history } = payload;\r\n  try {\r\n    yield call(ProductsApi.deleteProduct, id);\r\n    yield put(setProductLoadingState(LoadingState.LOADED));\r\n    yield history.push(`/home`);\r\n    yield put(setAlertData('Продукт удален.', TypesMessageAlert.SUCCESS));\r\n  } catch (error) {\r\n    yield put(setProductLoadingState(LoadingState.ERROR));\r\n    yield put(\r\n      setAlertData('Не удалось удалить продукт.', TypesMessageAlert.ERROR),\r\n    );\r\n  }\r\n}\r\n\r\nfunction* findByIdProduct({ payload }: RequetsFindByIdProduct) {\r\n  try {\r\n    const product = yield call(ProductsApi.findByIdProduct, payload);\r\n    yield put(setProduct(product));\r\n    yield put(setProductLoadingState(LoadingState.LOADED));\r\n  } catch (error) {\r\n    yield put(setProductLoadingState(LoadingState.ERROR));\r\n  }\r\n}\r\n\r\nexport const productAllSagas = [\r\n  watchCreateProduct(),\r\n  watchFindByIdProduct(),\r\n  watchPutProduct(),\r\n  watchDeleteProduct(),\r\n];\r\n","import axios from '../api/axios';\r\nimport { TypeDataLogin, TypeDataRegister } from '../redux/user/type/state';\r\n\r\ntype ResponseApi = {\r\n  status: string;\r\n  data: any;\r\n};\r\n\r\nexport const AuthApi = {\r\n  loginUser: async (userData: TypeDataLogin): Promise<ResponseApi> => {\r\n    const data = await axios.post<ResponseApi>('/api/auth/login', userData);\r\n    return data.data;\r\n  },\r\n  registerUser: async (userData: TypeDataRegister): Promise<ResponseApi> => {\r\n    const { data } = await axios.post<ResponseApi>(\r\n      '/api/auth/register',\r\n      userData,\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import { setUser, setUserLoadingState } from './actions';\r\nimport { takeLatest, put, call } from 'redux-saga/effects';\r\nimport { AuthApi } from '../../api/auth-api';\r\nimport {\r\n  UsersActionTypes,\r\n  RequestRegisterUserActionInterface,\r\n  RequestLoginUserActionInterface,\r\n} from './type/ActionTypes';\r\nimport { LoadingState } from './type/state';\r\nimport { setAlertData } from '../alert/actions';\r\nimport { TypesMessageAlert } from '../alert/type/state';\r\n\r\nexport function* watchLoginUser() {\r\n  yield takeLatest(UsersActionTypes.REQUEST_LOGIN_USER, requestLoginUser);\r\n}\r\nexport function* watchRegisterUser() {\r\n  yield takeLatest(UsersActionTypes.REQUEST_REGISTER_USER, requestRegisterUser);\r\n}\r\n\r\nfunction* requestLoginUser({ payload }: RequestLoginUserActionInterface) {\r\n  try {\r\n    const { data, token } = yield call(AuthApi.loginUser, payload.data);\r\n    window.localStorage.setItem('token', token);\r\n    yield put(setUser(data));\r\n    yield put(setUserLoadingState(LoadingState.LOADED));\r\n    yield put(setAlertData('Успешная авторизация.', TypesMessageAlert.SUCCESS));\r\n    yield payload.history.push('/home');\r\n  } catch (error) {\r\n    yield put(setUserLoadingState(LoadingState.ERROR));\r\n    yield put(setAlertData('Не удалось авторизация.', TypesMessageAlert.ERROR));\r\n  }\r\n}\r\nfunction* requestRegisterUser({ payload }: RequestRegisterUserActionInterface) {\r\n  try {\r\n    const data = yield call(AuthApi.registerUser, payload.data);\r\n    yield put(setUser(data));\r\n    yield put(setUserLoadingState(LoadingState.LOADED));\r\n    yield put(\r\n      setAlertData('Вы успешно зарегистрировались.', TypesMessageAlert.SUCCESS),\r\n    );\r\n    yield payload.history.push('/home');\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(setUserLoadingState(LoadingState.ERROR));\r\n    yield put(setAlertData('Ошибка регистрации.', TypesMessageAlert.ERROR));\r\n  }\r\n}\r\n\r\nexport const userAllSagas = [watchLoginUser(), watchRegisterUser()];\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport { categoriesAllSagas } from './categories/saga';\r\nimport { categoryAllSagas } from './category/saga';\r\nimport { productsAllSagas } from './products/saga';\r\nimport { productAllSagas } from './product/saga';\r\nimport { userAllSagas } from './user/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    ...categoriesAllSagas,\r\n    ...categoryAllSagas,\r\n    ...productsAllSagas,\r\n    ...productAllSagas,\r\n    ...userAllSagas,\r\n  ]);\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { rootReducer } from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './redux/redux';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}